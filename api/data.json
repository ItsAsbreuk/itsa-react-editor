{
    "project": {
        "name": "itsa-react-editor",
        "description": "React-Component: itsa-react-editor",
        "logo": "https://avatars0.githubusercontent.com/u/8314644?v=3&s=84",
        "version": "0.0.1"
    },
    "files": {
        "lib/draft-js/AtomicBlockUtils.js": {
            "name": "lib/draft-js/AtomicBlockUtils.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/BlockMap.js": {
            "name": "lib/draft-js/BlockMap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/BlockMapBuilder.js": {
            "name": "lib/draft-js/BlockMapBuilder.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/BlockTree.js": {
            "name": "lib/draft-js/BlockTree.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/CharacterMetadata.js": {
            "name": "lib/draft-js/CharacterMetadata.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/ComposedEntityMutability.js": {
            "name": "lib/draft-js/ComposedEntityMutability.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/ComposedEntityType.js": {
            "name": "lib/draft-js/ComposedEntityType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/CompositeDraftDecorator.js": {
            "name": "lib/draft-js/CompositeDraftDecorator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/ContentBlock.js": {
            "name": "lib/draft-js/ContentBlock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/ContentState.js": {
            "name": "lib/draft-js/ContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/ContentStateInlineStyle.js": {
            "name": "lib/draft-js/ContentStateInlineStyle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DOMDerivedSelection.js": {
            "name": "lib/draft-js/DOMDerivedSelection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DefaultDraftBlockRenderMap.js": {
            "name": "lib/draft-js/DefaultDraftBlockRenderMap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DefaultDraftInlineStyle.js": {
            "name": "lib/draft-js/DefaultDraftInlineStyle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/Draft.js": {
            "name": "lib/draft-js/Draft.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftBlockRenderConfig.js": {
            "name": "lib/draft-js/DraftBlockRenderConfig.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftBlockRenderMap.js": {
            "name": "lib/draft-js/DraftBlockRenderMap.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftBlockTag.js": {
            "name": "lib/draft-js/DraftBlockTag.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftBlockType.js": {
            "name": "lib/draft-js/DraftBlockType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftDecorator.js": {
            "name": "lib/draft-js/DraftDecorator.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftDecoratorType.js": {
            "name": "lib/draft-js/DraftDecoratorType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftDragType.js": {
            "name": "lib/draft-js/DraftDragType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditor.react.js": {
            "name": "lib/draft-js/DraftEditor.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorBlock.react.js": {
            "name": "lib/draft-js/DraftEditorBlock.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorCommand.js": {
            "name": "lib/draft-js/DraftEditorCommand.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorCompositionHandler.js": {
            "name": "lib/draft-js/DraftEditorCompositionHandler.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorContents.react.js": {
            "name": "lib/draft-js/DraftEditorContents.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorDragHandler.js": {
            "name": "lib/draft-js/DraftEditorDragHandler.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorEditHandler.js": {
            "name": "lib/draft-js/DraftEditorEditHandler.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorLeaf.react.js": {
            "name": "lib/draft-js/DraftEditorLeaf.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorModes.js": {
            "name": "lib/draft-js/DraftEditorModes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorPlaceholder.react.js": {
            "name": "lib/draft-js/DraftEditorPlaceholder.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorProps.js": {
            "name": "lib/draft-js/DraftEditorProps.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEditorTextNode.react.js": {
            "name": "lib/draft-js/DraftEditorTextNode.react.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEntity.js": {
            "name": "lib/draft-js/DraftEntity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEntityInstance.js": {
            "name": "lib/draft-js/DraftEntityInstance.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEntityMutability.js": {
            "name": "lib/draft-js/DraftEntityMutability.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEntitySegments.js": {
            "name": "lib/draft-js/DraftEntitySegments.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftEntityType.js": {
            "name": "lib/draft-js/DraftEntityType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftInlineStyle.js": {
            "name": "lib/draft-js/DraftInlineStyle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftModifier.js": {
            "name": "lib/draft-js/DraftModifier.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftOffsetKey.js": {
            "name": "lib/draft-js/DraftOffsetKey.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftOffsetKeyPath.js": {
            "name": "lib/draft-js/DraftOffsetKeyPath.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftPasteProcessor.js": {
            "name": "lib/draft-js/DraftPasteProcessor.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftRange.js": {
            "name": "lib/draft-js/DraftRange.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftRemovableWord.js": {
            "name": "lib/draft-js/DraftRemovableWord.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftRemovalDirection.js": {
            "name": "lib/draft-js/DraftRemovalDirection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftScrollPosition.js": {
            "name": "lib/draft-js/DraftScrollPosition.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftStringKey.js": {
            "name": "lib/draft-js/DraftStringKey.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/DraftTextAlignment.js": {
            "name": "lib/draft-js/DraftTextAlignment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/EditorBidiService.js": {
            "name": "lib/draft-js/EditorBidiService.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/EditorChangeType.js": {
            "name": "lib/draft-js/EditorChangeType.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/EditorState.js": {
            "name": "lib/draft-js/EditorState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/EditorStateCreationConfig.js": {
            "name": "lib/draft-js/EditorStateCreationConfig.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/EntityRange.js": {
            "name": "lib/draft-js/EntityRange.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/InlineStyleRange.js": {
            "name": "lib/draft-js/InlineStyleRange.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/KeyBindingUtil.js": {
            "name": "lib/draft-js/KeyBindingUtil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/RawDraftContentBlock.js": {
            "name": "lib/draft-js/RawDraftContentBlock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/RawDraftContentState.js": {
            "name": "lib/draft-js/RawDraftContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/RawDraftEntity.js": {
            "name": "lib/draft-js/RawDraftEntity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/RichTextEditorUtil.js": {
            "name": "lib/draft-js/RichTextEditorUtil.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/SampleDraftInlineStyle.js": {
            "name": "lib/draft-js/SampleDraftInlineStyle.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/SecondaryClipboard.js": {
            "name": "lib/draft-js/SecondaryClipboard.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/SelectionState.js": {
            "name": "lib/draft-js/SelectionState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/adjustBlockDepthForContentState.js": {
            "name": "lib/draft-js/adjustBlockDepthForContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/applyEntityToContentBlock.js": {
            "name": "lib/draft-js/applyEntityToContentBlock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/applyEntityToContentState.js": {
            "name": "lib/draft-js/applyEntityToContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/convertFromDraftStateToRaw.js": {
            "name": "lib/draft-js/convertFromDraftStateToRaw.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/convertFromHTMLToContentBlocks.js": {
            "name": "lib/draft-js/convertFromHTMLToContentBlocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/convertFromRawToDraftState.js": {
            "name": "lib/draft-js/convertFromRawToDraftState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/createCharacterList.js": {
            "name": "lib/draft-js/createCharacterList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/decodeEntityRanges.js": {
            "name": "lib/draft-js/decodeEntityRanges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/decodeInlineStyleRanges.js": {
            "name": "lib/draft-js/decodeInlineStyleRanges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnBeforeInput.js": {
            "name": "lib/draft-js/editOnBeforeInput.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnBlur.js": {
            "name": "lib/draft-js/editOnBlur.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnCompositionStart.js": {
            "name": "lib/draft-js/editOnCompositionStart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnCopy.js": {
            "name": "lib/draft-js/editOnCopy.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnCut.js": {
            "name": "lib/draft-js/editOnCut.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnDragOver.js": {
            "name": "lib/draft-js/editOnDragOver.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnDragStart.js": {
            "name": "lib/draft-js/editOnDragStart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnFocus.js": {
            "name": "lib/draft-js/editOnFocus.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnInput.js": {
            "name": "lib/draft-js/editOnInput.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnKeyDown.js": {
            "name": "lib/draft-js/editOnKeyDown.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnPaste.js": {
            "name": "lib/draft-js/editOnPaste.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/editOnSelect.js": {
            "name": "lib/draft-js/editOnSelect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/encodeEntityRanges.js": {
            "name": "lib/draft-js/encodeEntityRanges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/encodeInlineStyleRanges.js": {
            "name": "lib/draft-js/encodeInlineStyleRanges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/expandRangeToStartOfLine.js": {
            "name": "lib/draft-js/expandRangeToStartOfLine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/findAncestorOffsetKey.js": {
            "name": "lib/draft-js/findAncestorOffsetKey.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/findRangesImmutable.js": {
            "name": "lib/draft-js/findRangesImmutable.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/generateRandomKey.js": {
            "name": "lib/draft-js/generateRandomKey.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getCharacterRemovalRange.js": {
            "name": "lib/draft-js/getCharacterRemovalRange.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getContentStateFragment.js": {
            "name": "lib/draft-js/getContentStateFragment.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getDefaultKeyBinding.js": {
            "name": "lib/draft-js/getDefaultKeyBinding.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getDraftEditorSelection.js": {
            "name": "lib/draft-js/getDraftEditorSelection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getDraftEditorSelectionWithNodes.js": {
            "name": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getEntityKeyForSelection.js": {
            "name": "lib/draft-js/getEntityKeyForSelection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getFragmentFromSelection.js": {
            "name": "lib/draft-js/getFragmentFromSelection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getRangeBoundingClientRect.js": {
            "name": "lib/draft-js/getRangeBoundingClientRect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getRangeClientRects.js": {
            "name": "lib/draft-js/getRangeClientRects.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getRangesForDraftEntity.js": {
            "name": "lib/draft-js/getRangesForDraftEntity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getSafeBodyFromHTML.js": {
            "name": "lib/draft-js/getSafeBodyFromHTML.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getSampleStateForTesting.js": {
            "name": "lib/draft-js/getSampleStateForTesting.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getSelectionOffsetKeyForNode.js": {
            "name": "lib/draft-js/getSelectionOffsetKeyForNode.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getTextAfterNearestEntity.js": {
            "name": "lib/draft-js/getTextAfterNearestEntity.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getTextContentFromFiles.js": {
            "name": "lib/draft-js/getTextContentFromFiles.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getUpdatedSelectionState.js": {
            "name": "lib/draft-js/getUpdatedSelectionState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/getVisibleSelectionRect.js": {
            "name": "lib/draft-js/getVisibleSelectionRect.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/insertFragmentIntoContentState.js": {
            "name": "lib/draft-js/insertFragmentIntoContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/insertIntoList.js": {
            "name": "lib/draft-js/insertIntoList.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/insertTextIntoContentState.js": {
            "name": "lib/draft-js/insertTextIntoContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/isSelectionAtLeafStart.js": {
            "name": "lib/draft-js/isSelectionAtLeafStart.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/isSoftNewlineEvent.js": {
            "name": "lib/draft-js/isSoftNewlineEvent.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandBackspaceToStartOfLine.js": {
            "name": "lib/draft-js/keyCommandBackspaceToStartOfLine.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandBackspaceWord.js": {
            "name": "lib/draft-js/keyCommandBackspaceWord.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandDeleteWord.js": {
            "name": "lib/draft-js/keyCommandDeleteWord.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandInsertNewline.js": {
            "name": "lib/draft-js/keyCommandInsertNewline.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js": {
            "name": "lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js": {
            "name": "lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandPlainBackspace.js": {
            "name": "lib/draft-js/keyCommandPlainBackspace.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandPlainDelete.js": {
            "name": "lib/draft-js/keyCommandPlainDelete.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandTransposeCharacters.js": {
            "name": "lib/draft-js/keyCommandTransposeCharacters.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/keyCommandUndo.js": {
            "name": "lib/draft-js/keyCommandUndo.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/moveSelectionBackward.js": {
            "name": "lib/draft-js/moveSelectionBackward.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/moveSelectionForward.js": {
            "name": "lib/draft-js/moveSelectionForward.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/removeEntitiesAtEdges.js": {
            "name": "lib/draft-js/removeEntitiesAtEdges.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/removeRangeFromContentState.js": {
            "name": "lib/draft-js/removeRangeFromContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/removeTextWithStrategy.js": {
            "name": "lib/draft-js/removeTextWithStrategy.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/sanitizeDraftText.js": {
            "name": "lib/draft-js/sanitizeDraftText.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/setBlockTypeForContentState.js": {
            "name": "lib/draft-js/setBlockTypeForContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/setDraftEditorSelection.js": {
            "name": "lib/draft-js/setDraftEditorSelection.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/splitBlockInContentState.js": {
            "name": "lib/draft-js/splitBlockInContentState.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js/splitTextIntoTextBlocks.js": {
            "name": "lib/draft-js/splitTextIntoTextBlocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js-utils/callModifierForSelectedBlocks.js": {
            "name": "lib/draft-js-utils/callModifierForSelectedBlocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/draft-js-utils/getSelectedBlocks.js": {
            "name": "lib/draft-js-utils/getSelectedBlocks.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "lib/component.jsx": {
            "name": "lib/component.jsx",
            "modules": {
                "component.jsx": 1
            },
            "classes": {
                "Editor": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "component.jsx": {
            "name": "component.jsx",
            "submodules": {},
            "elements": {},
            "classes": {
                "Editor": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "lib/component.jsx",
            "line": 3,
            "description": "React editor, based upon Facebook's Draft.js.\n\n\n\n<i>Copyright (c) 2016 ItsAsbreuk - http://itsasbreuk.nl</i><br>\nNew BSD License - http://choosealicense.com/licenses/bsd-3-clause/",
            "since": "15.0.0"
        }
    },
    "classes": {
        "Editor": {
            "name": "Editor",
            "shortname": "Editor",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "component.jsx",
            "namespace": "",
            "file": "lib/component.jsx",
            "line": 3,
            "description": "React editor, based upon Facebook's Draft.js.\n\n\n\n<i>Copyright (c) 2016 ItsAsbreuk - http://itsasbreuk.nl</i><br>\nNew BSD License - http://choosealicense.com/licenses/bsd-3-clause/"
        }
    },
    "elements": {},
    "classitems": [
        {
            "file": "lib/draft-js/AtomicBlockUtils.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "AtomicBlockUtils",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockMap.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "BlockMap",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockMapBuilder.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "BlockMapBuilder",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockTree.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "BlockTree",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockTree.js",
            "line": 45,
            "description": "Generate a block tree for a given ContentBlock/decorator pair.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockTree.js",
            "line": 76,
            "description": "Create a string representation of the given tree map. This allows us\nto rapidly determine whether a tree has undergone a significant\nstructural change.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/BlockTree.js",
            "line": 90,
            "description": "Generate LeafRange records for a given character list.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CharacterMetadata.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "CharacterMetadata",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CharacterMetadata.js",
            "line": 82,
            "description": "Use this function instead of the `CharacterMetadata` constructor.\nSince most content generally uses only a very small number of\nstyle/entity permutations, we can reuse these objects as often as\npossible.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ComposedEntityMutability.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "ComposedEntityMutability",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ComposedEntityType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "ComposedEntityType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CompositeDraftDecorator.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "CompositeDraftDecorator",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CompositeDraftDecorator.js",
            "line": 26,
            "description": "A CompositeDraftDecorator traverses through a list of DraftDecorator\ninstances to identify sections of a ContentBlock that should be rendered\nin a \"decorated\" manner. For example, hashtags, mentions, and links may\nbe intended to stand out visually, be rendered as anchors, etc.\n\nThe list of decorators supplied to the constructor will be used in the\norder they are provided. This allows the caller to specify a priority for\nstring matching, in case of match collisions among decorators.\n\nFor instance, I may have a link with a `#` in its text. Though this section\nof text may match our hashtag decorator, it should not be treated as a\nhashtag. I should therefore list my link DraftDecorator\nbefore my hashtag DraftDecorator when constructing this composite\ndecorator instance.\n\nThus, when a collision like this is encountered, the earlier match is\npreserved and the new match is discarded.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CompositeDraftDecorator.js",
            "line": 56,
            "description": "Determine whether we can occupy the specified slice of the decorations\narray.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/CompositeDraftDecorator.js",
            "line": 108,
            "description": "Splice the specified component into our decoration array at the desired\nrange.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ContentBlock.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "ContentBlock",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ContentBlock.js",
            "line": 96,
            "description": "Execute a callback for every contiguous range of styles within the block.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ContentBlock.js",
            "line": 105,
            "description": "Execute a callback for every contiguous range of entities within the block.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "ContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/ContentStateInlineStyle.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "ContentStateInlineStyle",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DOMDerivedSelection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DOMDerivedSelection",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DefaultDraftBlockRenderMap.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DefaultDraftBlockRenderMap",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DefaultDraftInlineStyle.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DefaultDraftInlineStyle",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/Draft.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "Draft",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockRenderConfig.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftBlockRenderConfig",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockRenderMap.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftBlockRenderMap",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockTag.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftBlockTag",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockTag.js",
            "line": 15,
            "description": "The list of default valid block tags.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftBlockType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftBlockType.js",
            "line": 15,
            "description": "The list of default valid block types.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecorator.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftDecorator",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecorator.js",
            "line": 13,
            "description": "A DraftDecorator is a strategy-component pair intended for use when\nrendering content.\n\n  - A \"strategy\": A function that accepts a ContentBlock object and\n    continuously executes a callback with start/end values corresponding to\n    relevant matches in the document text. For example, getHashtagMatches\n    uses a hashtag regex to find hashtag strings in the block, and\n    for each hashtag match, executes the callback with start/end pairs.\n\n  - A \"component\": A React component that will be used to render the\n    \"decorated\" section of text.\n\n  - \"props\": Props to be passed into the React component that will be used.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecoratorType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftDecoratorType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecoratorType.js",
            "line": 13,
            "description": "An interface for document decorator classes, allowing the creation of\ncustom decorator classes.\n\nSee `CompositeDraftDecorator` for the most common use case.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecoratorType.js",
            "line": 25,
            "description": "Given a `ContentBlock`, return an immutable List of decorator keys.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecoratorType.js",
            "line": 29,
            "description": "Given a decorator key, return the component to use when rendering\nthis decorated range.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDecoratorType.js",
            "line": 34,
            "description": "Given a decorator key, optionally return the props to use when rendering\nthis decorated range.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDragType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftDragType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftDragType.js",
            "line": 15,
            "description": "A type that allows us to avoid passing boolean arguments\naround to indicate whether a drag type is internal or external.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditor.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 65,
            "description": "`DraftEditor` is the root editor component. It composes a `contentEditable`\ndiv, and provides a wide variety of useful function props for managing the\nstate of the editor. See `DraftEditorProps` for details.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 144,
            "description": "Build a method that will pass the event to the specified handler method.\nThis allows us to look up the correct handler function for the current\neditor mode, if any has been specified.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 270,
            "description": "IE has a hardcoded \"feature\" that attempts to convert link text into\nanchors in contentEditable DOM. This breaks the editor's expectations of\nthe DOM, and control is lost. Disable it to make IE behave.\nSee: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\nie9-beta-minor-change-list.aspx",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 282,
            "description": "Prevent selection events from affecting the current editor state. This\nis mostly intended to defend against IE, which fires off `selectionchange`\nevents regardless of whether the selection is set via the browser or\nprogrammatically. We only care about selection events that occur because\nof browser interaction, not re-renders and forced selections.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 300,
            "description": "Used via `this.focus()`.\n\nForce focus back onto the editor node.\n\nForcing focus causes the browser to scroll to the top of the editor, which\nmay be undesirable when the editor is taller than the viewport. To solve\nthis, either use a specified scroll position (in cases like `cut` behavior\nwhere it should be restored to a known position) or store the current\nscroll state and put it back in place after focus has been forced.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 347,
            "description": "Used via `this.setMode(...)`.\n\nSet the behavior mode for the editor component. This switches the current\nhandler module to ensure that DOM events are managed appropriately for\nthe active mode.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 365,
            "description": "Used via `this.restoreEditorDOM()`.\n\nForce a complete re-render of the editor based on the current EditorState.\nThis is useful when we know we are going to lose control of the DOM\nstate (cut command, IME) and we want to make sure that reconciliation\noccurs on a version of the DOM that is synchronized with our EditorState.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 383,
            "description": "Guard against rendering. Intended for use when we need to manually\nreset editor contents, to ensure that no outside influences lead to\nReact reconciliation when we are in an uncertain state.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 399,
            "description": "Used via `this.setClipboard(...)`.\n\nSet the clipboard state for a cut/copy event.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 410,
            "description": "Used via `this.getClipboard()`.\n\nRetrieve the clipboard state for a cut/copy event.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 421,
            "description": "Used via `this.update(...)`.\n\nPropagate a new `EditorState` object to higher-level components. This is\nthe method by which event handlers inform the `DraftEditor` component of\nstate changes. A component that composes a `DraftEditor` **must** provide\nan `onChange` prop to receive state updates passed along from this\nfunction.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 436,
            "description": "Used in conjunction with `_onDragLeave()`, by counting the number of times\na dragged element enters and leaves the editor (or any of its children),\nto determine when the dragged element absolutely leaves the editor.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 447,
            "description": "See `_onDragEnter()`.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditor.react.js",
            "line": 465,
            "description": "Define proxies that can route events to the current handler.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorBlock.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorBlock.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorBlock.react.js",
            "line": 45,
            "description": "The default block renderer for a `DraftEditor` component.\n\nA `DraftEditorBlock` is able to render a given `ContentBlock` to its\nappropriate decorator and inline style components.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorBlock.react.js",
            "line": 61,
            "description": "Return whether a block overlaps with either edge of the `SelectionState`.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorBlock.react.js",
            "line": 71,
            "description": "When a block is mounted and overlaps the selection state, we need to make\nsure that the cursor is visible to match native behavior. This may not\nbe the case if the user has pressed `RETURN` or pasted some content, since\nprogramatically creating these new blocks and setting the DOM selection\nwill miss out on the browser natively scrolling to that position.\n\nTo replicate native behavior, if the block overlaps the selection state\non mount, force the scroll position. Check the scroll state of the scroll\nparent, and adjust it to align the entire block to the bottom of the\nscroll parent.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorCommand",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 17,
            "description": "A set of editor commands that may be invoked by keyboard commands or UI\ncontrols. These commands should map to operations that modify content or\nselection state and update the editor state accordingly.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 26,
            "description": "Self-explanatory.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 30,
            "description": "Perform a forward deletion.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 34,
            "description": "Perform a forward deletion to the next word boundary after the selection.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 38,
            "description": "Perform a backward deletion.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 42,
            "description": "Perform a backward deletion to the previous word boundary before the\nselection.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 47,
            "description": "Perform a backward deletion to the beginning of the current line.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 51,
            "description": "Toggle styles. Commands may be intepreted to modify inline text ranges\nor block types.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 56,
            "description": "Split a block in two.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 60,
            "description": "Self-explanatory.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCommand.js",
            "line": 64,
            "description": "Commands to support the \"secondary\" clipboard provided by certain\nbrowsers and operating systems.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorCompositionHandler",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 22,
            "description": "Millisecond delay to allow `compositionstart` to fire again upon\n`compositionend`.\n\nThis is used for Korean input to ensure that typing can continue without\nthe editor trying to render too quickly. More specifically, Safari 7.1+\ntriggers `compositionstart` a little slower than Chrome/FF, which\nleads to composed characters being resolved and re-render occurring\nsooner than we want.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 34,
            "description": "A handful of variables used to track the current composition and its\nresolution status. These exist at the module level because it is not\npossible to have compositions occurring in multiple editors simultaneously,\nand it simplifies state management with respect to the DraftEditor component.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 49,
            "description": "A `compositionstart` event has fired while we're still in composition\nmode. Continue the current composition session to prevent a re-render.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 57,
            "description": "Attempt to end the current composition session.\n\nDefer handling because browser will still insert the chars into active\nelement after `compositionend`. If a `compositionstart` event fires\nbefore `resolveComposition` executes, our composition session will\ncontinue.\n\nThe `resolved` flag is useful because certain IME interfaces fire the\n`compositionend` event multiple times, thus queueing up multiple attempts\nat handling the composition. Since handling the same composition event\ntwice could break the DOM, we only use the first event. Example: Arabic\nGoogle Input Tools on Windows 8.1 fires `compositionend` three times.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 83,
            "description": "In Safari, keydown events may fire when committing compositions. If\nthe arrow keys are used to commit, prevent default so that the cursor\ndoesn't move, otherwise it will jump back noticeably on re-render.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 94,
            "description": "Keypress events may fire when committing compositions. In Firefox,\npressing RETURN commits the composition and inserts extra newline\ncharacters that we do not want. `preventDefault` allows the composition\nto be committed while preventing the extra characters.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorCompositionHandler.js",
            "line": 106,
            "description": "Attempt to insert composed characters into the document.\n\nIf we are still in a composition session, do nothing. Otherwise, insert\nthe characters into the document and terminate the composition session.\n\nIf no characters were composed -- for instance, the user\ndeleted all composed characters and committed nothing new --\nforce a re-render. We also re-render when the composition occurs\nat the beginning of a leaf, to ensure that if the browser has\ncreated a new text node for the composition, we will discard it.\n\nResetting innerHTML will move focus to the beginning of the editor,\nso we update to force it back to the correct place.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorContents.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorContents.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorContents.react.js",
            "line": 35,
            "description": "`DraftEditorContents` is the container component for all block components\nrendered for a `DraftEditor`. It is optimized to aggressively avoid\nre-rendering blocks whenever possible.\n\nThis component is separate from `DraftEditor` because certain props\n(for instance, ARIA props) must be allowed to update without affecting\nthe contents of the editor.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorContents.react.js",
            "line": 54,
            "description": "Provide default styling for list items. This way, lists will be styled with\nproper counters and indentation even if the caller does not specify\ntheir own styling at all. If more than five levels of nesting are needed,\nthe necessary CSS classes can be provided via `blockStyleFn` configuration.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorDragHandler.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorDragHandler",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorDragHandler.js",
            "line": 14,
            "description": "Get a SelectionState for the supplied mouse event.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorDragHandler.js",
            "line": 51,
            "description": "Drag originating from input terminated.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorDragHandler.js",
            "line": 58,
            "description": "Handle data being dropped.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorDragHandler.js",
            "line": 109,
            "description": "Insert text at a specified selection.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorEditHandler.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorEditHandler",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorLeaf.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorLeaf.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorLeaf.react.js",
            "line": 31,
            "description": "All leaf nodes in the editor are spans with single text nodes. Leaf\nelements are styled based on the merging of an optional custom style map\nand a default style map.\n\n`DraftEditorLeaf` also provides a wrapper for calling into the imperative\nDOM Selection API. In this way, top-level components can declaratively\nmaintain the selection state.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorLeaf.react.js",
            "line": 53,
            "description": "By making individual leaf instances aware of their context within\nthe text of the editor, we can set our selection range more\neasily than we could in the non-React world.\n\nNote that this depends on our maintaining tight control over the\nDOM structure of the TextEditor component. If leaves had multiple\ntext nodes, this would be harder.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorModes",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 19,
            "description": "`edit` is the most common mode for text entry. This includes most typing,\ndeletion, cut/copy/paste, and other behaviors.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 24,
            "description": "`composite` mode handles IME text entry.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 28,
            "description": "`drag` mode handles editor behavior while a drag event is occurring.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 32,
            "description": "`cut` mode allows us to effectively ignore all edit behaviors while the`\nbrowser performs a native `cut` operation on the DOM.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorModes.js",
            "line": 37,
            "description": "`render` mode is the normal \"null\" mode, during which no edit behavior is\nexpected or observed.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorPlaceholder.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorPlaceholder.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorPlaceholder.react.js",
            "line": 28,
            "description": "This component is responsible for rendering placeholder text for the\n`DraftEditor` component.\n\nOverride placeholder style via CSS.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorProps.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorProps",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorProps.js",
            "line": 19,
            "description": "The two most critical props are `editorState` and `onChange`.\n\nThe `editorState` prop defines the entire state of the editor, while the\n`onChange` prop is the method in which all state changes are propagated\nupward to higher-level components.\n\nThese props are analagous to `value` and `onChange` in controlled React\ntext inputs.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorProps.js",
            "line": 54,
            "description": "Cancelable event handlers, handled from the top level down. A handler\nthat returns true will be the last handler to execute for that event.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorProps.js",
            "line": 75,
            "description": "Non-cancelable event triggers.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorTextNode.react.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEditorTextNode.react",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorTextNode.react.js",
            "line": 34,
            "description": "Check whether the node should be considered a newline.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorTextNode.react.js",
            "line": 41,
            "description": "Placeholder elements for empty text content.\n\nWhat is this `data-text` attribute, anyway? It turns out that we need to\nput an attribute on the lowest-level text node in order to preserve correct\nspellcheck handling. If the <span> is naked, Chrome and Safari may do\nbizarre things to do the DOM -- split text nodes, create extra spans, etc.\nIf the <span> has an attribute, this appears not to happen.\nSee http://jsfiddle.net/9khdavod/ for the failure case, and\nhttp://jsfiddle.net/7pg143f7/ for the fixed case.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEditorTextNode.react.js",
            "line": 64,
            "description": "The lowest-level component in a `DraftEditor`, the text node component\nreplaces the default React text node implementation. This allows us to\nperform custom handling of newline behavior and avoid re-rendering text\nnodes with DOM state that already matches the expectations of our immutable\neditor state.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEntity",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 28,
            "description": "A \"document entity\" is an object containing metadata associated with a\npiece of text in a ContentBlock.\n\nFor example, a `link` entity might include a `uri` property. When a\nContentBlock is rendered in the browser, text that refers to that link\nentity may be rendered as an anchor, with the `uri` as the href value.\n\nIn a ContentBlock, every position in the text may correspond to zero\nor one entities. This correspondence is tracked using a key string,\ngenerated via DraftEntity.create() and used to obtain entity metadata\nvia DraftEntity.get().",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 42,
            "description": "Create a DraftEntityInstance and store it for later retrieval.\n\nA random key string will be generated and returned. This key may\nbe used to track the entity's usage in a ContentBlock, and for\nretrieving data about the entity at render time.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 53,
            "description": "Add an existing DraftEntityInstance to the DraftEntity map. This is\nuseful when restoring instances from the server.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 63,
            "description": "Retrieve the entity corresponding to the supplied key string.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 72,
            "description": "Entity instances are immutable. If you need to update the data for an\ninstance, this method will merge your data updates and return a new\ninstance.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntity.js",
            "line": 85,
            "description": "Completely replace the data for a given instance.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntityInstance.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEntityInstance",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntityInstance.js",
            "line": 33,
            "description": "An instance of a document entity, consisting of a `type` and relevant\n`data`, metadata about the entity.\n\nFor instance, a \"link\" entity might provide a URI, and a \"mention\"\nentity might provide the mentioned user's ID. These pieces of data\nmay be used when rendering the entity as part of a ContentBlock DOM\nrepresentation. For a link, the data would be used as an href for\nthe rendered anchor. For a mention, the ID could be used to retrieve\na hovercard.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntityMutability.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEntityMutability",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntityMutability.js",
            "line": 20,
            "description": "An enum representing the possible \"mutability\" options for an entity.\nThis refers to the behavior that should occur when inserting or removing\ncharacters in a text range with an entity applied to it.\n\n`MUTABLE`:\n  The text range can be modified freely. Generally used in cases where\n  the text content and the entity do not necessarily have a direct\n  relationship. For instance, the text and URI for a link may be completely\n  different. The user is allowed to edit the text as needed, and the entity\n  is preserved and applied to any characters added within the range.\n\n`IMMUTABLE`:\n  Not to be confused with immutable data structures used to represent the\n  state of the editor. Immutable entity ranges cannot be modified in any\n  way. Adding characters within the range will remove the entity from the\n  entire range. Deleting characters will delete the entire range. Example:\n  Facebook Page mentions.\n\n`SEGMENTED`:\n  Segmented entities allow the removal of partial ranges of text, as\n  separated by a delimiter. Adding characters wihin the range will remove\n  the entity from the entire range. Deleting characters within a segmented\n  entity will delete only the segments affected by the deletion. Example:\n  Facebook User mentions.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntitySegments.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEntitySegments",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntitySegments.js",
            "line": 14,
            "description": "Identify the range to delete from a segmented entity.\n\nRules:\n\n Example: 'John F. Kennedy'\n\n  - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n    will return the range of that text.\n\n      'John F. Kennedy' -> 'John F.'\n                 ^\n\n  - Forward deletion of whitespace will remove the following section:\n\n      'John F. Kennedy' -> 'John Kennedy'\n           ^\n\n  - Backward deletion of whitespace will remove the previous section:\n\n      'John F. Kennedy' -> 'F. Kennedy'\n           ^",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftEntityType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftEntityType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftInlineStyle.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftInlineStyle",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftModifier.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftModifier",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftModifier.js",
            "line": 14,
            "description": "`DraftModifier` provides a set of convenience methods that apply\nmodifications to a `ContentState` object based on a target `SelectionState`.\n\nAny change to a `ContentState` should be decomposable into a series of\ntransaction functions that apply the required changes and return output\n`ContentState` objects.\n\nThese functions encapsulate some of the most common transaction sequences.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftOffsetKey.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftOffsetKey",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftOffsetKeyPath.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftOffsetKeyPath",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftPasteProcessor.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftPasteProcessor",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftRange.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftRange",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftRemovableWord.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftRemovableWord",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftRemovalDirection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftRemovalDirection",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftRemovalDirection.js",
            "line": 17,
            "description": "A type that allows us to avoid passing boolean arguments\naround to indicate whether a deletion is forward or backward.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftScrollPosition.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftScrollPosition",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftStringKey.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftStringKey",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/DraftTextAlignment.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "DraftTextAlignment",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorBidiService.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "EditorBidiService",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorChangeType.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "EditorChangeType",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "EditorState",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 106,
            "description": "While editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an \"override\" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 122,
            "description": "Get the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 168,
            "description": "Incorporate native DOM selection changes into the EditorState. This\nmethod can be used when we simply want to accept whatever the DOM\nhas given us to represent selection, and we do not need to re-render\nthe editor.\n\nTo forcibly move the DOM selection, see `EditorState.forceSelection`.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 257,
            "description": "At times, we need to force the DOM selection to be where we\nneed it to be. This can occur when the anchor or focus nodes\nare non-text nodes, for instance. In this case, we want to trigger\na re-render of the editor, which in turn forces selection into\nthe correct place in the DOM. The `forceSelection` method\naccomplishes this.\n\nThis method should be used in cases where you need to explicitly\nmove the DOM selection from one place to another without a change\nin ContentState.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 278,
            "description": "Move selection to the end of the editor without forcing focus.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 298,
            "description": "Force focus to the end of the editor. This is useful in scenarios\nwhere we want to programmatically focus the input and it makes sense\nto allow the user to continue working seamlessly.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 310,
            "description": "Push the current ContentState onto the undo stack if it should be\nconsidered a boundary state, and set the provided ContentState as the\nnew current content.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 370,
            "description": "Make the top ContentState in the undo stack the new current content and\npush the current content onto the redo stack.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 403,
            "description": "Make the top ContentState in the redo stack the new current content and\npush the current content onto the undo stack.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 436,
            "description": "Not for public consumption.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 447,
            "description": "Set the supplied SelectionState as the new current selection, and set\nthe `force` flag to trigger manual selection placement by the view.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 452,
            "description": "Not for public consumption.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 475,
            "description": "Regenerate the entire tree map for a given ContentState and decorator.\nReturns an OrderedMap that maps all available ContentBlock objects.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 485,
            "description": "Regenerate tree map objects for all ContentBlocks that have changed\nbetween the current editorState and newContent. Returns an OrderedMap\nwith only changed regenerated tree map objects.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 500,
            "description": "Generate tree map objects for a new decorator object, preserving any\ndecorations that are unchanged from the previous decorator.\n\nNote that in order for this to perform optimally, decoration Lists for\ndecorators should be preserved when possible to allow for direct immutable\nList comparison.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorState.js",
            "line": 516,
            "description": "Return whether a change should be considered a boundary state, given\nthe previous change type. Allows us to discard potential boundary states\nduring standard typing or deletion behavior.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EditorStateCreationConfig.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "EditorStateCreationConfig",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EntityRange.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "EntityRange",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/EntityRange.js",
            "line": 15,
            "description": "A plain object representation of an entity attribution.\n\nThe `key` value corresponds to the key of the entity in the `entityMap` of\na `ComposedText` object, not for use with `DraftEntity.get()`.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/InlineStyleRange.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "InlineStyleRange",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/InlineStyleRange.js",
            "line": 15,
            "description": "A plain object representation of an inline style range.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/KeyBindingUtil.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "KeyBindingUtil",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/KeyBindingUtil.js",
            "line": 23,
            "description": "Check whether the ctrlKey modifier is *not* being used in conjunction with\nthe altKey modifier. If they are combined, the result is an `altGraph`\nkey modifier, which should not be handled by this set of key bindings.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftContentBlock.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "RawDraftContentBlock",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftContentBlock.js",
            "line": 13,
            "description": "A plain object representation of a ContentBlock, with all style and entity\nattribution repackaged as range objects.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "RawDraftContentState",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftContentState.js",
            "line": 13,
            "description": "A type that represents a composed document as vanilla JavaScript objects,\nwith all styles and entities represented as ranges. Corresponding entity\nobjects are packaged as objects as well.\n\nThis object is especially useful when sending the document state to the\nserver for storage, as its representation is more concise than our\nimmutable objects.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftEntity.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "RawDraftEntity",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RawDraftEntity.js",
            "line": 13,
            "description": "A plain object representation of an EntityInstance.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RichTextEditorUtil.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "RichTextEditorUtil",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RichTextEditorUtil.js",
            "line": 73,
            "description": "For collapsed selections at the start of styled blocks, backspace should\njust remove the existing style.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RichTextEditorUtil.js",
            "line": 238,
            "description": "Toggle the specified inline style for the selection. If the\nuser's selection is collapsed, apply or remove the style for the\ninternal state. If it is not collapsed, apply the change directly\nto the document state.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/RichTextEditorUtil.js",
            "line": 277,
            "description": "When a collapsed cursor is at the start of an empty styled block, allow\ncertain key commands (newline, backspace) to simply change the\nstyle of the block instead of the default behavior.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/SampleDraftInlineStyle.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "SampleDraftInlineStyle",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/SecondaryClipboard.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "SecondaryClipboard",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/SecondaryClipboard.js",
            "line": 23,
            "description": "Some systems offer a \"secondary\" clipboard to allow quick internal cut\nand paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/SelectionState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "SelectionState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/SelectionState.js",
            "line": 84,
            "description": "Return whether the specified range overlaps with an edge of the\nSelectionState.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/adjustBlockDepthForContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "adjustBlockDepthForContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/applyEntityToContentBlock.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "applyEntityToContentBlock",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/applyEntityToContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "applyEntityToContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/convertFromDraftStateToRaw.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "convertFromDraftStateToRaw",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/convertFromHTMLToContentBlocks.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "convertFromHTMLToContentBlocks",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/convertFromHTMLToContentBlocks.js",
            "line": 207,
            "description": "Check to see if we have anything like <p> <blockquote> <h1>... to create\nblock tags from. If we do, we can use those and ignore <div> tags. If we\ndon't, we can treat <div> tags as meaningful (unstyled) blocks.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/convertFromRawToDraftState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "convertFromRawToDraftState",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/createCharacterList.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "createCharacterList",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/decodeEntityRanges.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "decodeEntityRanges",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/decodeEntityRanges.js",
            "line": 20,
            "description": "Convert to native JavaScript string lengths to determine ranges.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/decodeInlineStyleRanges.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "decodeInlineStyleRanges",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/decodeInlineStyleRanges.js",
            "line": 25,
            "description": "Convert to native JavaScript string lengths to determine ranges.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnBeforeInput.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnBeforeInput",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnBeforeInput.js",
            "line": 41,
            "description": "Replace the current selection with the specified text string, with the\ninline style and entity key applied to the newly inserted text.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnBeforeInput.js",
            "line": 50,
            "description": "When `onBeforeInput` executes, the browser is attempting to insert a\ncharacter into the editor. Apply this character data to the document,\nallowing native insertion if possible.\n\nNative insertion is encouraged in order to limit re-rendering and to\npreserve spellcheck highlighting, which disappears or flashes if re-render\noccurs on the relevant text nodes.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnBlur.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnBlur",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCompositionStart.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnCompositionStart",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCompositionStart.js",
            "line": 17,
            "description": "The user has begun using an IME input system. Switching to `composite` mode\nallows handling composition input and disables other edit behavior.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCopy.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnCopy",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCopy.js",
            "line": 17,
            "description": "If we have a selection, create a ContentState fragment and store\nit in our internal clipboard. Subsequent paste events will use this\nfragment if no external clipboard data is supplied.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCut.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnCut",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnCut.js",
            "line": 22,
            "description": "On `cut` events, native behavior is allowed to occur so that the system\nclipboard is set properly. This means that we need to take steps to recover\nthe editor DOM state after the `cut` has occurred in order to maintain\ncontrol of the component.\n\nIn addition, we can keep a copy of the removed fragment, including all\nstyles and entities, for use as an internal paste.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnDragOver.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnDragOver",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnDragOver.js",
            "line": 15,
            "description": "Drag behavior has begun from outside the editor element.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnDragStart.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnDragStart",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnDragStart.js",
            "line": 15,
            "description": "A `dragstart` event has begun within the text editor component.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnFocus.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnFocus",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnInput.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnInput",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnInput.js",
            "line": 30,
            "description": "This function is intended to handle spellcheck and autocorrect changes,\nwhich occur in the DOM natively without any opportunity to observe or\ninterpret the changes before they occur.\n\nThe `input` event fires in contentEditable elements reliably for non-IE\nbrowsers, immediately after changes occur to the editor DOM. Since our other\nhandlers override or otherwise handle cover other varieties of text input,\nthe DOM state should match the model in all controlled input cases. Thus,\nwhen an `input` change leads to a DOM/model mismatch, the change should be\ndue to a spellcheck change, and we can incorporate it into our model.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnKeyDown.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnKeyDown",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnKeyDown.js",
            "line": 39,
            "description": "Map a `DraftEditorCommand` command value to a corresponding function.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnKeyDown.js",
            "line": 73,
            "description": "Intercept keydown behavior to handle keys and commands manually, if desired.\n\nKeydown combinations may be mapped to `DraftCommand` values, which may\ncorrespond to command functions that modify the editor or its contents.\n\nSee `getDefaultKeyBinding` for defaults. Alternatively, the top-level\ncomponent may provide a custom mapping via the `keyBindingFn` prop.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnPaste.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnPaste",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnPaste.js",
            "line": 13,
            "description": "Paste content.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/editOnSelect.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "editOnSelect",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/encodeEntityRanges.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "encodeEntityRanges",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/encodeEntityRanges.js",
            "line": 21,
            "description": "Convert to UTF-8 character counts for storage.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/encodeInlineStyleRanges.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "encodeInlineStyleRanges",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/encodeInlineStyleRanges.js",
            "line": 27,
            "description": "Helper function for getting encoded styles for each inline style. Convert\nto UTF-8 character counts for storage.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/expandRangeToStartOfLine.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "expandRangeToStartOfLine",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/expandRangeToStartOfLine.js",
            "line": 21,
            "description": "Return the computed line height, in pixels, for the provided element.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/expandRangeToStartOfLine.js",
            "line": 43,
            "description": "Return whether every ClientRect in the provided list lies on the same line.\n\nWe assume that the rects on the same line all contain the baseline, so the\nlowest top line needs to be above the highest bottom line (i.e., if you were\nto project the rects onto the y-axis, their intersection would be nonempty).\n\nIn addition, we require that no two boxes are lineHeight (or more) apart at\neither top or bottom, which helps protect against false positives for fonts\nwith extremely large glyph heights (e.g., with a font size of 17px, Zapfino\nproduces rects of height 58px!).",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/expandRangeToStartOfLine.js",
            "line": 82,
            "description": "Return the length of a node, as used by Range offsets.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/expandRangeToStartOfLine.js",
            "line": 99,
            "description": "Given a collapsed range, move the start position backwards as far as\npossible while the range still spans only a single line.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/findAncestorOffsetKey.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "findAncestorOffsetKey",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/findAncestorOffsetKey.js",
            "line": 18,
            "description": "Get the key from the node's nearest offset-aware ancestor.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/findRangesImmutable.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "findRangesImmutable",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/findRangesImmutable.js",
            "line": 13,
            "description": "Search through an array to find contiguous stretches of elements that\nmatch a specified filter function.\n\nWhen ranges are found, execute a specified `found` function to supply\nthe values to the caller.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/generateRandomKey.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "generateRandomKey",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getCharacterRemovalRange.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getCharacterRemovalRange",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getCharacterRemovalRange.js",
            "line": 14,
            "description": "Given a SelectionState and a removal direction, determine the entire range\nthat should be removed from a ContentState. This is based on any entities\nwithin the target, with their `mutability` values taken into account.\n\nFor instance, if we are attempting to remove part of an \"immutable\" entity\nrange, the entire entity must be removed. The returned `SelectionState`\nwill be adjusted accordingly.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getContentStateFragment.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getContentStateFragment",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDefaultKeyBinding.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getDefaultKeyBinding",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDefaultKeyBinding.js",
            "line": 37,
            "description": "Get the appropriate undo/redo command for a Z key command.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDefaultKeyBinding.js",
            "line": 61,
            "description": "Retrieve a bound key command for the given event.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getDraftEditorSelection",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelection.js",
            "line": 14,
            "description": "Convert the current selection range to an anchor/focus pair of offset keys\nand values that can be interpreted by components.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getDraftEditorSelectionWithNodes",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "line": 22,
            "description": "Convert the current selection range to an anchor/focus pair of offset keys\nand values that can be interpreted by components.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "line": 93,
            "description": "Identify the first leaf descendant for the given node.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "line": 103,
            "description": "Identify the last leaf descendant for the given node.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getDraftEditorSelectionWithNodes.js",
            "line": 167,
            "description": "Return the length of a node's textContent, regarding single newline\ncharacters as zero-length. This allows us to avoid problems with identifying\nthe correct selection offset for empty blocks in IE, in which we\nrender newlines instead of break tags.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getEntityKeyForSelection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getEntityKeyForSelection",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getEntityKeyForSelection.js",
            "line": 14,
            "description": "Return the entity key that should be used when inserting text for the\nspecified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\nand `SEGMENTED` entities should not be used for insertion behavior.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getEntityKeyForSelection.js",
            "line": 45,
            "description": "Determine whether an entity key corresponds to a `MUTABLE` entity. If so,\nreturn it. If not, return null.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getFragmentFromSelection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getFragmentFromSelection",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangeBoundingClientRect.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getRangeBoundingClientRect",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangeBoundingClientRect.js",
            "line": 21,
            "description": "Like range.getBoundingClientRect() but normalizes for browser bugs.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangeClientRects.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getRangeClientRects",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangeClientRects.js",
            "line": 56,
            "description": "Like range.getClientRects() but normalizes for browser bugs.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangesForDraftEntity.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getRangesForDraftEntity",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getRangesForDraftEntity.js",
            "line": 14,
            "description": "Obtain the start and end positions of the range that has the\nspecified entity applied to it.\n\nEntity keys are applied only to contiguous stretches of text, so this\nmethod searches for the first instance of the entity key and returns\nthe subsequent range.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getSafeBodyFromHTML.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getSafeBodyFromHTML",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getSampleStateForTesting.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getSampleStateForTesting",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getSelectionOffsetKeyForNode.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getSelectionOffsetKeyForNode",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getSelectionOffsetKeyForNode.js",
            "line": 16,
            "description": "Get offset key from a node.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getTextAfterNearestEntity.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getTextAfterNearestEntity",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getTextAfterNearestEntity.js",
            "line": 14,
            "description": "Find the string of text between the previous entity and the specified\noffset. This allows us to narrow down search areas for regex matching.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getTextContentFromFiles.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getTextContentFromFiles",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getTextContentFromFiles.js",
            "line": 26,
            "description": "Extract the text content from a file list.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getTextContentFromFiles.js",
            "line": 43,
            "description": "todo isaac: Do work to turn html/rtf into a content fragment.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getUpdatedSelectionState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getUpdatedSelectionState",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getVisibleSelectionRect.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "getVisibleSelectionRect",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/getVisibleSelectionRect.js",
            "line": 14,
            "description": "Return the bounding ClientRect for the visible DOM selection, if any.\nIn cases where there are no selected ranges or the bounding rect is\ntemporarily invalid, return null.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/insertFragmentIntoContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "insertFragmentIntoContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/insertIntoList.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "insertIntoList",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/insertIntoList.js",
            "line": 13,
            "description": "Maintain persistence for target list when appending and prepending.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/insertTextIntoContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "insertTextIntoContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/isSelectionAtLeafStart.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "isSelectionAtLeafStart",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/isSoftNewlineEvent.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "isSoftNewlineEvent",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandBackspaceToStartOfLine.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandBackspaceToStartOfLine",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandBackspaceWord.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandBackspaceWord",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandBackspaceWord.js",
            "line": 21,
            "description": "Delete the word that is left of the cursor, as well as any spaces or\npunctuation after the word.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandDeleteWord.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandDeleteWord",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandDeleteWord.js",
            "line": 21,
            "description": "Delete the word that is right of the cursor, as well as any spaces or\npunctuation before the word.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandInsertNewline.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandInsertNewline",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandMoveSelectionToEndOfBlock",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js",
            "line": 17,
            "description": "See comment for `moveSelectionToStartOfBlock`.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandMoveSelectionToStartOfBlock",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js",
            "line": 17,
            "description": "Collapse selection at the start of the first selected block. This is used\nfor Firefox versions that attempt to navigate forward/backward instead of\nmoving the cursor. Other browsers are able to move the cursor natively.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandPlainBackspace.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandPlainBackspace",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandPlainBackspace.js",
            "line": 21,
            "description": "Remove the selected range. If the cursor is collapsed, remove the preceding\ncharacter. This operation is Unicode-aware, so removing a single character\nwill remove a surrogate pair properly as well.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandPlainDelete.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandPlainDelete",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandPlainDelete.js",
            "line": 21,
            "description": "Remove the selected range. If the cursor is collapsed, remove the following\ncharacter. This operation is Unicode-aware, so removing a single character\nwill remove a surrogate pair properly as well.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandTransposeCharacters.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandTransposeCharacters",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandTransposeCharacters.js",
            "line": 20,
            "description": "Transpose the characters on either side of a collapsed cursor, or\nif the cursor is at the end of the block, transpose the last two\ncharacters.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/keyCommandUndo.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "keyCommandUndo",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/moveSelectionBackward.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "moveSelectionBackward",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/moveSelectionBackward.js",
            "line": 13,
            "description": "Given a collapsed selection, move the focus `maxDistance` backward within\nthe selected block. If the selection will go beyond the start of the block,\nmove focus to the end of the previous block, but no further.\n\nThis function is not Unicode-aware, so surrogate pairs will be treated\nas having length 2.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/moveSelectionForward.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "moveSelectionForward",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/moveSelectionForward.js",
            "line": 13,
            "description": "Given a collapsed selection, move the focus `maxDistance` forward within\nthe selected block. If the selection will go beyond the end of the block,\nmove focus to the start of the next block, but no further.\n\nThis function is not Unicode-aware, so surrogate pairs will be treated\nas having length 2.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/removeEntitiesAtEdges.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "removeEntitiesAtEdges",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/removeRangeFromContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "removeRangeFromContentState",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/removeRangeFromContentState.js",
            "line": 68,
            "description": "Maintain persistence for target list when removing characters on the\nhead and tail of the character list.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/removeTextWithStrategy.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "removeTextWithStrategy",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/removeTextWithStrategy.js",
            "line": 13,
            "description": "For a collapsed selection state, remove text based on the specified strategy.\nIf the selection state is not collapsed, remove the entire selected range.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/sanitizeDraftText.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "sanitizeDraftText",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/setBlockTypeForContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "setBlockTypeForContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/setDraftEditorSelection.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "setDraftEditorSelection",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/setDraftEditorSelection.js",
            "line": 14,
            "description": "In modern non-IE browsers, we can support both forward and backward\nselections.\n\nNote: IE10+ supports the Selection object, but it does not support\nthe `extend` method, which means that even in modern IE, it's not possible\nto programatically create a backward selection. Thus, for all IE\nversions, we use the old IE API to create our selections.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/setDraftEditorSelection.js",
            "line": 104,
            "description": "Extend selection towards focus point.",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/splitBlockInContentState.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "splitBlockInContentState",
            "typechecks": "",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js/splitTextIntoTextBlocks.js",
            "line": 1,
            "description": "Copyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "providesmodule": "splitTextIntoTextBlocks",
            "class": "Editor"
        },
        {
            "file": "lib/draft-js-utils/callModifierForSelectedBlocks.js",
            "line": 15,
            "description": "Calls a provided `modifier` function with a selection for each\nselected block in the current editor selection. Passes through additional\narguments to the modifier.\n\nNote: At the moment it will retain the original selection and override\npossible selection changes from modifiers",
            "params": [
                {
                    "name": "editorState",
                    "description": "The current draft.js editor state object",
                    "type": "Object"
                },
                {
                    "name": "modifier",
                    "description": "A modifier function to be executed.\n                             Must have the signature (editorState, selection, ...)",
                    "type": "Function"
                },
                {
                    "name": "args",
                    "description": "Additional arguments to be passed through to the modifier",
                    "type": "Mixed",
                    "multiple": true
                }
            ],
            "return": {
                "description": "The new editor state",
                "type": "Object"
            },
            "class": "Editor"
        },
        {
            "file": "lib/draft-js-utils/getSelectedBlocks.js",
            "line": 6,
            "description": "Returns an array of all `ContentBlock` instances within two block keys",
            "params": [
                {
                    "name": "contentState",
                    "description": "A draft.js `ContentState` instance",
                    "type": "Object"
                },
                {
                    "name": "anchorKey",
                    "description": "The block key to start searching from",
                    "type": "String"
                },
                {
                    "name": "focusKey",
                    "description": "The block key until which to search",
                    "type": "String"
                }
            ],
            "return": {
                "description": "An array containing the found content blocks",
                "type": "Array"
            },
            "class": "Editor"
        },
        {
            "file": "lib/component.jsx",
            "line": 57,
            "description": "Callbcak when the component will mount.\nWill backup the value of `this.props.initialHtml`.",
            "itemtype": "method",
            "name": "componentWillMount",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 71,
            "description": "componentDidMount will call `this.activatePlaces()`;",
            "itemtype": "method",
            "name": "componentDidMount",
            "since": "0.0.1",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 84,
            "description": "componentWilUnmount does some cleanup.",
            "itemtype": "method",
            "name": "componentWillUnmount",
            "since": "0.0.1",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 94,
            "description": "Empties the editor's content",
            "itemtype": "method",
            "name": "empty",
            "access": "private",
            "tagname": "",
            "since": "15.1.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 106,
            "description": "Will set the focus on the editable area.",
            "itemtype": "method",
            "name": "focus",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 117,
            "description": "Generates the `html` of the editable area.",
            "itemtype": "method",
            "name": "getHtml",
            "return": {
                "description": "String"
            },
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 135,
            "description": "React render-method --> renderes the Component.",
            "itemtype": "method",
            "name": "render",
            "return": {
                "description": "ReactComponent"
            },
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 223,
            "description": "Resets the editor's content to its initial value, specified with `this.props.initialHtml`\n(or empty if undefined)",
            "itemtype": "method",
            "name": "reset",
            "access": "private",
            "tagname": "",
            "since": "15.1.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 240,
            "description": "Will call `this.props.onChangeState`.\nNote that `this.props.onChangeState` is responsible for reset this new state, by passing it through\nto new `this.props.editorState`.\n\nWill also call `this.props.onChange` if specified.",
            "itemtype": "method",
            "name": "_handleEditorChange",
            "params": [
                {
                    "name": "editorState",
                    "description": "",
                    "type": "Object"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 265,
            "description": "Processes keyboard-commands and will set the new state by calling `_handleEditorChange`.",
            "itemtype": "method",
            "name": "_handleKeyCommand",
            "params": [
                {
                    "name": "command",
                    "description": "",
                    "type": "String"
                }
            ],
            "access": "private",
            "tagname": "",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 282,
            "description": "Processes state-changes that are generated by the toolbar.\nWill set the new state by calling `_handleEditorChange`.\n\nAlso, refocusses the editable area.",
            "itemtype": "method",
            "name": "_handleToolbarStateChange",
            "return": {
                "description": "ReactComponent"
            },
            "access": "private",
            "tagname": "",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 301,
            "description": "Whether to autofocus the Component.",
            "itemtype": "property",
            "name": "autoFocus",
            "type": "Boolean",
            "since": "0.0.1",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 310,
            "description": "Decorator for the editor",
            "itemtype": "property",
            "name": "decorator",
            "type": "Object",
            "since": "15.0.3",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 319,
            "description": "Whether the editor is `editable`",
            "itemtype": "property",
            "name": "editable",
            "type": "Boolean",
            "default": "true",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 329,
            "description": "The Component's editor-state. This is am important property: it needs to be reset\nevery time the editable-area is changed, by listening to the `onChangeState` property.",
            "itemtype": "property",
            "name": "editorState",
            "type": "Object",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 339,
            "description": "The initial content of the editor.",
            "itemtype": "property",
            "name": "initialHtml",
            "type": "String",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 348,
            "description": "To specify a minimum height of the editable area.\nYou best need this property, because min-height cannot be set on the Component-class (this doesn't work).\nUsing classes would mean you'll need to set a deeper div\nwhere you would need nested classes, to prevent all other editors having the same min-height.",
            "itemtype": "property",
            "name": "minHeight",
            "type": "String",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 360,
            "description": "Callback whenever the editable-content is changed.",
            "itemtype": "property",
            "name": "onChange",
            "type": "Function",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 369,
            "description": "The callback for the editor's state-change. This is the most important property: it needs to handle\nstate-changes, by re-defining the property `editorState` every time the editable-area is changed.\n\nThe callback recieves one argument: the new `editorState`",
            "itemtype": "property",
            "name": "onChangeState",
            "type": "Function",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        },
        {
            "file": "lib/component.jsx",
            "line": 381,
            "description": "An array with the definition of the toolbar-items.\nBecause it uses the structure of `itsa-react-form`, you can read more about this\nfeature here: https://www.npmjs.com/package/itsa-react-form",
            "itemtype": "property",
            "name": "toolbarItems",
            "type": "Array",
            "since": "15.0.0",
            "class": "Editor",
            "module": "component.jsx"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/AtomicBlockUtils.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/AtomicBlockUtils.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/BlockMap.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/BlockMapBuilder.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/BlockTree.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/CharacterMetadata.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/CharacterMetadata.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/ComposedEntityMutability.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/ComposedEntityType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/CompositeDraftDecorator.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/CompositeDraftDecorator.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/ContentBlock.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/ContentBlock.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/ContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/ContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/ContentStateInlineStyle.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/ContentStateInlineStyle.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DOMDerivedSelection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DefaultDraftBlockRenderMap.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DefaultDraftInlineStyle.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/Draft.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftBlockRenderConfig.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftBlockRenderMap.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftBlockTag.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftBlockType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftDecorator.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftDecoratorType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftDragType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditor.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditor.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorBlock.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorBlock.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorCommand.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorContents.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorContents.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorDragHandler.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorDragHandler.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorEditHandler.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorLeaf.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorLeaf.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorModes.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorPlaceholder.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorPlaceholder.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorProps.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEntity.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEntity.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEntityInstance.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEntityMutability.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEntitySegments.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftEntitySegments.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftEntityType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftInlineStyle.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftModifier.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftModifier.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftOffsetKey.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftOffsetKeyPath.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftPasteProcessor.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftPasteProcessor.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftRange.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftRemovableWord.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftRemovableWord.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftRemovalDirection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftScrollPosition.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftStringKey.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/DraftStringKey.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/DraftTextAlignment.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/EditorBidiService.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/EditorBidiService.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/EditorChangeType.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/EditorState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/EditorStateCreationConfig.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/EntityRange.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/InlineStyleRange.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/KeyBindingUtil.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/KeyBindingUtil.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/RawDraftContentBlock.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/RawDraftContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/RawDraftEntity.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/RichTextEditorUtil.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/RichTextEditorUtil.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/SampleDraftInlineStyle.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/SecondaryClipboard.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/SelectionState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/SelectionState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/adjustBlockDepthForContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/adjustBlockDepthForContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/applyEntityToContentBlock.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/applyEntityToContentBlock.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/applyEntityToContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/applyEntityToContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/convertFromDraftStateToRaw.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/convertFromHTMLToContentBlocks.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/convertFromHTMLToContentBlocks.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/convertFromRawToDraftState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/createCharacterList.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/createCharacterList.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/decodeEntityRanges.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/decodeEntityRanges.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/decodeInlineStyleRanges.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/decodeInlineStyleRanges.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnBeforeInput.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnBlur.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnCompositionStart.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnCopy.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnCut.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnDragOver.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnDragStart.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnFocus.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnInput.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnKeyDown.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnPaste.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/editOnSelect.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/encodeEntityRanges.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/encodeEntityRanges.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/encodeInlineStyleRanges.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/findAncestorOffsetKey.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/findAncestorOffsetKey.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/findRangesImmutable.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/generateRandomKey.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/generateRandomKey.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getCharacterRemovalRange.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getCharacterRemovalRange.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getContentStateFragment.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getContentStateFragment.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getDefaultKeyBinding.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getDefaultKeyBinding.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getDraftEditorSelection.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getDraftEditorSelection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getEntityKeyForSelection.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getEntityKeyForSelection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getFragmentFromSelection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getRangeBoundingClientRect.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getRangeBoundingClientRect.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getRangeClientRects.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getRangeClientRects.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getRangesForDraftEntity.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getRangesForDraftEntity.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getSafeBodyFromHTML.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getSampleStateForTesting.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getSampleStateForTesting.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getSelectionOffsetKeyForNode.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getSelectionOffsetKeyForNode.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getTextAfterNearestEntity.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getTextAfterNearestEntity.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getTextContentFromFiles.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getUpdatedSelectionState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/getVisibleSelectionRect.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/getVisibleSelectionRect.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/insertFragmentIntoContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/insertFragmentIntoContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/insertIntoList.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/insertTextIntoContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/insertTextIntoContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/isSelectionAtLeafStart.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/isSelectionAtLeafStart.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/isSoftNewlineEvent.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/isSoftNewlineEvent.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandBackspaceToStartOfLine.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandBackspaceWord.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandDeleteWord.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandInsertNewline.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandPlainBackspace.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandPlainDelete.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandTransposeCharacters.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/keyCommandUndo.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/moveSelectionBackward.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/moveSelectionForward.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/removeEntitiesAtEdges.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/removeRangeFromContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/removeTextWithStrategy.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/sanitizeDraftText.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/setBlockTypeForContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/setBlockTypeForContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/setDraftEditorSelection.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/setDraftEditorSelection.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/splitBlockInContentState.js:1"
        },
        {
            "message": "unknown tag: typechecks",
            "line": " lib/draft-js/splitBlockInContentState.js:1"
        },
        {
            "message": "unknown tag: providesmodule",
            "line": " lib/draft-js/splitTextIntoTextBlocks.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/AtomicBlockUtils.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/BlockMap.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/BlockMapBuilder.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/BlockTree.js:1"
        },
        {
            "message": "Missing item type\nGenerate a block tree for a given ContentBlock/decorator pair.",
            "line": " lib/draft-js/BlockTree.js:45"
        },
        {
            "message": "Missing item type\nCreate a string representation of the given tree map. This allows us\nto rapidly determine whether a tree has undergone a significant\nstructural change.",
            "line": " lib/draft-js/BlockTree.js:76"
        },
        {
            "message": "Missing item type\nGenerate LeafRange records for a given character list.",
            "line": " lib/draft-js/BlockTree.js:90"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/CharacterMetadata.js:1"
        },
        {
            "message": "Missing item type\nUse this function instead of the `CharacterMetadata` constructor.\nSince most content generally uses only a very small number of\nstyle/entity permutations, we can reuse these objects as often as\npossible.",
            "line": " lib/draft-js/CharacterMetadata.js:82"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/ComposedEntityMutability.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/ComposedEntityType.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/CompositeDraftDecorator.js:1"
        },
        {
            "message": "Missing item type\nA CompositeDraftDecorator traverses through a list of DraftDecorator\ninstances to identify sections of a ContentBlock that should be rendered\nin a \"decorated\" manner. For example, hashtags, mentions, and links may\nbe intended to stand out visually, be rendered as anchors, etc.\n\nThe list of decorators supplied to the constructor will be used in the\norder they are provided. This allows the caller to specify a priority for\nstring matching, in case of match collisions among decorators.\n\nFor instance, I may have a link with a `#` in its text. Though this section\nof text may match our hashtag decorator, it should not be treated as a\nhashtag. I should therefore list my link DraftDecorator\nbefore my hashtag DraftDecorator when constructing this composite\ndecorator instance.\n\nThus, when a collision like this is encountered, the earlier match is\npreserved and the new match is discarded.",
            "line": " lib/draft-js/CompositeDraftDecorator.js:26"
        },
        {
            "message": "Missing item type\nDetermine whether we can occupy the specified slice of the decorations\narray.",
            "line": " lib/draft-js/CompositeDraftDecorator.js:56"
        },
        {
            "message": "Missing item type\nSplice the specified component into our decoration array at the desired\nrange.",
            "line": " lib/draft-js/CompositeDraftDecorator.js:108"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/ContentBlock.js:1"
        },
        {
            "message": "Missing item type\nExecute a callback for every contiguous range of styles within the block.",
            "line": " lib/draft-js/ContentBlock.js:96"
        },
        {
            "message": "Missing item type\nExecute a callback for every contiguous range of entities within the block.",
            "line": " lib/draft-js/ContentBlock.js:105"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/ContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/ContentStateInlineStyle.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DOMDerivedSelection.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DefaultDraftBlockRenderMap.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DefaultDraftInlineStyle.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/Draft.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftBlockRenderConfig.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftBlockRenderMap.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftBlockTag.js:1"
        },
        {
            "message": "Missing item type\nThe list of default valid block tags.",
            "line": " lib/draft-js/DraftBlockTag.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftBlockType.js:1"
        },
        {
            "message": "Missing item type\nThe list of default valid block types.",
            "line": " lib/draft-js/DraftBlockType.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftDecorator.js:1"
        },
        {
            "message": "Missing item type\nA DraftDecorator is a strategy-component pair intended for use when\nrendering content.\n\n  - A \"strategy\": A function that accepts a ContentBlock object and\n    continuously executes a callback with start/end values corresponding to\n    relevant matches in the document text. For example, getHashtagMatches\n    uses a hashtag regex to find hashtag strings in the block, and\n    for each hashtag match, executes the callback with start/end pairs.\n\n  - A \"component\": A React component that will be used to render the\n    \"decorated\" section of text.\n\n  - \"props\": Props to be passed into the React component that will be used.",
            "line": " lib/draft-js/DraftDecorator.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftDecoratorType.js:1"
        },
        {
            "message": "Missing item type\nAn interface for document decorator classes, allowing the creation of\ncustom decorator classes.\n\nSee `CompositeDraftDecorator` for the most common use case.",
            "line": " lib/draft-js/DraftDecoratorType.js:13"
        },
        {
            "message": "Missing item type\nGiven a `ContentBlock`, return an immutable List of decorator keys.",
            "line": " lib/draft-js/DraftDecoratorType.js:25"
        },
        {
            "message": "Missing item type\nGiven a decorator key, return the component to use when rendering\nthis decorated range.",
            "line": " lib/draft-js/DraftDecoratorType.js:29"
        },
        {
            "message": "Missing item type\nGiven a decorator key, optionally return the props to use when rendering\nthis decorated range.",
            "line": " lib/draft-js/DraftDecoratorType.js:34"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftDragType.js:1"
        },
        {
            "message": "Missing item type\nA type that allows us to avoid passing boolean arguments\naround to indicate whether a drag type is internal or external.",
            "line": " lib/draft-js/DraftDragType.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditor.react.js:1"
        },
        {
            "message": "Missing item type\n`DraftEditor` is the root editor component. It composes a `contentEditable`\ndiv, and provides a wide variety of useful function props for managing the\nstate of the editor. See `DraftEditorProps` for details.",
            "line": " lib/draft-js/DraftEditor.react.js:65"
        },
        {
            "message": "Missing item type\nBuild a method that will pass the event to the specified handler method.\nThis allows us to look up the correct handler function for the current\neditor mode, if any has been specified.",
            "line": " lib/draft-js/DraftEditor.react.js:144"
        },
        {
            "message": "Missing item type\nIE has a hardcoded \"feature\" that attempts to convert link text into\nanchors in contentEditable DOM. This breaks the editor's expectations of\nthe DOM, and control is lost. Disable it to make IE behave.\nSee: http://blogs.msdn.com/b/ieinternals/archive/2010/09/15/\nie9-beta-minor-change-list.aspx",
            "line": " lib/draft-js/DraftEditor.react.js:270"
        },
        {
            "message": "Missing item type\nPrevent selection events from affecting the current editor state. This\nis mostly intended to defend against IE, which fires off `selectionchange`\nevents regardless of whether the selection is set via the browser or\nprogrammatically. We only care about selection events that occur because\nof browser interaction, not re-renders and forced selections.",
            "line": " lib/draft-js/DraftEditor.react.js:282"
        },
        {
            "message": "Missing item type\nUsed via `this.focus()`.\n\nForce focus back onto the editor node.\n\nForcing focus causes the browser to scroll to the top of the editor, which\nmay be undesirable when the editor is taller than the viewport. To solve\nthis, either use a specified scroll position (in cases like `cut` behavior\nwhere it should be restored to a known position) or store the current\nscroll state and put it back in place after focus has been forced.",
            "line": " lib/draft-js/DraftEditor.react.js:300"
        },
        {
            "message": "Missing item type\nUsed via `this.setMode(...)`.\n\nSet the behavior mode for the editor component. This switches the current\nhandler module to ensure that DOM events are managed appropriately for\nthe active mode.",
            "line": " lib/draft-js/DraftEditor.react.js:347"
        },
        {
            "message": "Missing item type\nUsed via `this.restoreEditorDOM()`.\n\nForce a complete re-render of the editor based on the current EditorState.\nThis is useful when we know we are going to lose control of the DOM\nstate (cut command, IME) and we want to make sure that reconciliation\noccurs on a version of the DOM that is synchronized with our EditorState.",
            "line": " lib/draft-js/DraftEditor.react.js:365"
        },
        {
            "message": "Missing item type\nGuard against rendering. Intended for use when we need to manually\nreset editor contents, to ensure that no outside influences lead to\nReact reconciliation when we are in an uncertain state.",
            "line": " lib/draft-js/DraftEditor.react.js:383"
        },
        {
            "message": "Missing item type\nUsed via `this.setClipboard(...)`.\n\nSet the clipboard state for a cut/copy event.",
            "line": " lib/draft-js/DraftEditor.react.js:399"
        },
        {
            "message": "Missing item type\nUsed via `this.getClipboard()`.\n\nRetrieve the clipboard state for a cut/copy event.",
            "line": " lib/draft-js/DraftEditor.react.js:410"
        },
        {
            "message": "Missing item type\nUsed via `this.update(...)`.\n\nPropagate a new `EditorState` object to higher-level components. This is\nthe method by which event handlers inform the `DraftEditor` component of\nstate changes. A component that composes a `DraftEditor` **must** provide\nan `onChange` prop to receive state updates passed along from this\nfunction.",
            "line": " lib/draft-js/DraftEditor.react.js:421"
        },
        {
            "message": "Missing item type\nUsed in conjunction with `_onDragLeave()`, by counting the number of times\na dragged element enters and leaves the editor (or any of its children),\nto determine when the dragged element absolutely leaves the editor.",
            "line": " lib/draft-js/DraftEditor.react.js:436"
        },
        {
            "message": "Missing item type\nSee `_onDragEnter()`.",
            "line": " lib/draft-js/DraftEditor.react.js:447"
        },
        {
            "message": "Missing item type\nDefine proxies that can route events to the current handler.",
            "line": " lib/draft-js/DraftEditor.react.js:465"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorBlock.react.js:1"
        },
        {
            "message": "Missing item type\nThe default block renderer for a `DraftEditor` component.\n\nA `DraftEditorBlock` is able to render a given `ContentBlock` to its\nappropriate decorator and inline style components.",
            "line": " lib/draft-js/DraftEditorBlock.react.js:45"
        },
        {
            "message": "Missing item type\nReturn whether a block overlaps with either edge of the `SelectionState`.",
            "line": " lib/draft-js/DraftEditorBlock.react.js:61"
        },
        {
            "message": "Missing item type\nWhen a block is mounted and overlaps the selection state, we need to make\nsure that the cursor is visible to match native behavior. This may not\nbe the case if the user has pressed `RETURN` or pasted some content, since\nprogramatically creating these new blocks and setting the DOM selection\nwill miss out on the browser natively scrolling to that position.\n\nTo replicate native behavior, if the block overlaps the selection state\non mount, force the scroll position. Check the scroll state of the scroll\nparent, and adjust it to align the entire block to the bottom of the\nscroll parent.",
            "line": " lib/draft-js/DraftEditorBlock.react.js:71"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorCommand.js:1"
        },
        {
            "message": "Missing item type\nA set of editor commands that may be invoked by keyboard commands or UI\ncontrols. These commands should map to operations that modify content or\nselection state and update the editor state accordingly.",
            "line": " lib/draft-js/DraftEditorCommand.js:17"
        },
        {
            "message": "Missing item type\nSelf-explanatory.",
            "line": " lib/draft-js/DraftEditorCommand.js:26"
        },
        {
            "message": "Missing item type\nPerform a forward deletion.",
            "line": " lib/draft-js/DraftEditorCommand.js:30"
        },
        {
            "message": "Missing item type\nPerform a forward deletion to the next word boundary after the selection.",
            "line": " lib/draft-js/DraftEditorCommand.js:34"
        },
        {
            "message": "Missing item type\nPerform a backward deletion.",
            "line": " lib/draft-js/DraftEditorCommand.js:38"
        },
        {
            "message": "Missing item type\nPerform a backward deletion to the previous word boundary before the\nselection.",
            "line": " lib/draft-js/DraftEditorCommand.js:42"
        },
        {
            "message": "Missing item type\nPerform a backward deletion to the beginning of the current line.",
            "line": " lib/draft-js/DraftEditorCommand.js:47"
        },
        {
            "message": "Missing item type\nToggle styles. Commands may be intepreted to modify inline text ranges\nor block types.",
            "line": " lib/draft-js/DraftEditorCommand.js:51"
        },
        {
            "message": "Missing item type\nSplit a block in two.",
            "line": " lib/draft-js/DraftEditorCommand.js:56"
        },
        {
            "message": "Missing item type\nSelf-explanatory.",
            "line": " lib/draft-js/DraftEditorCommand.js:60"
        },
        {
            "message": "Missing item type\nCommands to support the \"secondary\" clipboard provided by certain\nbrowsers and operating systems.",
            "line": " lib/draft-js/DraftEditorCommand.js:64"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:1"
        },
        {
            "message": "Missing item type\nMillisecond delay to allow `compositionstart` to fire again upon\n`compositionend`.\n\nThis is used for Korean input to ensure that typing can continue without\nthe editor trying to render too quickly. More specifically, Safari 7.1+\ntriggers `compositionstart` a little slower than Chrome/FF, which\nleads to composed characters being resolved and re-render occurring\nsooner than we want.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:22"
        },
        {
            "message": "Missing item type\nA handful of variables used to track the current composition and its\nresolution status. These exist at the module level because it is not\npossible to have compositions occurring in multiple editors simultaneously,\nand it simplifies state management with respect to the DraftEditor component.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:34"
        },
        {
            "message": "Missing item type\nA `compositionstart` event has fired while we're still in composition\nmode. Continue the current composition session to prevent a re-render.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:49"
        },
        {
            "message": "Missing item type\nAttempt to end the current composition session.\n\nDefer handling because browser will still insert the chars into active\nelement after `compositionend`. If a `compositionstart` event fires\nbefore `resolveComposition` executes, our composition session will\ncontinue.\n\nThe `resolved` flag is useful because certain IME interfaces fire the\n`compositionend` event multiple times, thus queueing up multiple attempts\nat handling the composition. Since handling the same composition event\ntwice could break the DOM, we only use the first event. Example: Arabic\nGoogle Input Tools on Windows 8.1 fires `compositionend` three times.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:57"
        },
        {
            "message": "Missing item type\nIn Safari, keydown events may fire when committing compositions. If\nthe arrow keys are used to commit, prevent default so that the cursor\ndoesn't move, otherwise it will jump back noticeably on re-render.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:83"
        },
        {
            "message": "Missing item type\nKeypress events may fire when committing compositions. In Firefox,\npressing RETURN commits the composition and inserts extra newline\ncharacters that we do not want. `preventDefault` allows the composition\nto be committed while preventing the extra characters.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:94"
        },
        {
            "message": "Missing item type\nAttempt to insert composed characters into the document.\n\nIf we are still in a composition session, do nothing. Otherwise, insert\nthe characters into the document and terminate the composition session.\n\nIf no characters were composed -- for instance, the user\ndeleted all composed characters and committed nothing new --\nforce a re-render. We also re-render when the composition occurs\nat the beginning of a leaf, to ensure that if the browser has\ncreated a new text node for the composition, we will discard it.\n\nResetting innerHTML will move focus to the beginning of the editor,\nso we update to force it back to the correct place.",
            "line": " lib/draft-js/DraftEditorCompositionHandler.js:106"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorContents.react.js:1"
        },
        {
            "message": "Missing item type\n`DraftEditorContents` is the container component for all block components\nrendered for a `DraftEditor`. It is optimized to aggressively avoid\nre-rendering blocks whenever possible.\n\nThis component is separate from `DraftEditor` because certain props\n(for instance, ARIA props) must be allowed to update without affecting\nthe contents of the editor.",
            "line": " lib/draft-js/DraftEditorContents.react.js:35"
        },
        {
            "message": "Missing item type\nProvide default styling for list items. This way, lists will be styled with\nproper counters and indentation even if the caller does not specify\ntheir own styling at all. If more than five levels of nesting are needed,\nthe necessary CSS classes can be provided via `blockStyleFn` configuration.",
            "line": " lib/draft-js/DraftEditorContents.react.js:54"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorDragHandler.js:1"
        },
        {
            "message": "Missing item type\nGet a SelectionState for the supplied mouse event.",
            "line": " lib/draft-js/DraftEditorDragHandler.js:14"
        },
        {
            "message": "Missing item type\nDrag originating from input terminated.",
            "line": " lib/draft-js/DraftEditorDragHandler.js:51"
        },
        {
            "message": "Missing item type\nHandle data being dropped.",
            "line": " lib/draft-js/DraftEditorDragHandler.js:58"
        },
        {
            "message": "Missing item type\nInsert text at a specified selection.",
            "line": " lib/draft-js/DraftEditorDragHandler.js:109"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorEditHandler.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorLeaf.react.js:1"
        },
        {
            "message": "Missing item type\nAll leaf nodes in the editor are spans with single text nodes. Leaf\nelements are styled based on the merging of an optional custom style map\nand a default style map.\n\n`DraftEditorLeaf` also provides a wrapper for calling into the imperative\nDOM Selection API. In this way, top-level components can declaratively\nmaintain the selection state.",
            "line": " lib/draft-js/DraftEditorLeaf.react.js:31"
        },
        {
            "message": "Missing item type\nBy making individual leaf instances aware of their context within\nthe text of the editor, we can set our selection range more\neasily than we could in the non-React world.\n\nNote that this depends on our maintaining tight control over the\nDOM structure of the TextEditor component. If leaves had multiple\ntext nodes, this would be harder.",
            "line": " lib/draft-js/DraftEditorLeaf.react.js:53"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorModes.js:1"
        },
        {
            "message": "Missing item type\n`edit` is the most common mode for text entry. This includes most typing,\ndeletion, cut/copy/paste, and other behaviors.",
            "line": " lib/draft-js/DraftEditorModes.js:19"
        },
        {
            "message": "Missing item type\n`composite` mode handles IME text entry.",
            "line": " lib/draft-js/DraftEditorModes.js:24"
        },
        {
            "message": "Missing item type\n`drag` mode handles editor behavior while a drag event is occurring.",
            "line": " lib/draft-js/DraftEditorModes.js:28"
        },
        {
            "message": "Missing item type\n`cut` mode allows us to effectively ignore all edit behaviors while the`\nbrowser performs a native `cut` operation on the DOM.",
            "line": " lib/draft-js/DraftEditorModes.js:32"
        },
        {
            "message": "Missing item type\n`render` mode is the normal \"null\" mode, during which no edit behavior is\nexpected or observed.",
            "line": " lib/draft-js/DraftEditorModes.js:37"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorPlaceholder.react.js:1"
        },
        {
            "message": "Missing item type\nThis component is responsible for rendering placeholder text for the\n`DraftEditor` component.\n\nOverride placeholder style via CSS.",
            "line": " lib/draft-js/DraftEditorPlaceholder.react.js:28"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorProps.js:1"
        },
        {
            "message": "Missing item type\nThe two most critical props are `editorState` and `onChange`.\n\nThe `editorState` prop defines the entire state of the editor, while the\n`onChange` prop is the method in which all state changes are propagated\nupward to higher-level components.\n\nThese props are analagous to `value` and `onChange` in controlled React\ntext inputs.",
            "line": " lib/draft-js/DraftEditorProps.js:19"
        },
        {
            "message": "Missing item type\nCancelable event handlers, handled from the top level down. A handler\nthat returns true will be the last handler to execute for that event.",
            "line": " lib/draft-js/DraftEditorProps.js:54"
        },
        {
            "message": "Missing item type\nNon-cancelable event triggers.",
            "line": " lib/draft-js/DraftEditorProps.js:75"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:1"
        },
        {
            "message": "Missing item type\nCheck whether the node should be considered a newline.",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:34"
        },
        {
            "message": "Missing item type\nPlaceholder elements for empty text content.\n\nWhat is this `data-text` attribute, anyway? It turns out that we need to\nput an attribute on the lowest-level text node in order to preserve correct\nspellcheck handling. If the <span> is naked, Chrome and Safari may do\nbizarre things to do the DOM -- split text nodes, create extra spans, etc.\nIf the <span> has an attribute, this appears not to happen.\nSee http://jsfiddle.net/9khdavod/ for the failure case, and\nhttp://jsfiddle.net/7pg143f7/ for the fixed case.",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:41"
        },
        {
            "message": "Missing item type\nThe lowest-level component in a `DraftEditor`, the text node component\nreplaces the default React text node implementation. This allows us to\nperform custom handling of newline behavior and avoid re-rendering text\nnodes with DOM state that already matches the expectations of our immutable\neditor state.",
            "line": " lib/draft-js/DraftEditorTextNode.react.js:64"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEntity.js:1"
        },
        {
            "message": "Missing item type\nA \"document entity\" is an object containing metadata associated with a\npiece of text in a ContentBlock.\n\nFor example, a `link` entity might include a `uri` property. When a\nContentBlock is rendered in the browser, text that refers to that link\nentity may be rendered as an anchor, with the `uri` as the href value.\n\nIn a ContentBlock, every position in the text may correspond to zero\nor one entities. This correspondence is tracked using a key string,\ngenerated via DraftEntity.create() and used to obtain entity metadata\nvia DraftEntity.get().",
            "line": " lib/draft-js/DraftEntity.js:28"
        },
        {
            "message": "Missing item type\nCreate a DraftEntityInstance and store it for later retrieval.\n\nA random key string will be generated and returned. This key may\nbe used to track the entity's usage in a ContentBlock, and for\nretrieving data about the entity at render time.",
            "line": " lib/draft-js/DraftEntity.js:42"
        },
        {
            "message": "Missing item type\nAdd an existing DraftEntityInstance to the DraftEntity map. This is\nuseful when restoring instances from the server.",
            "line": " lib/draft-js/DraftEntity.js:53"
        },
        {
            "message": "Missing item type\nRetrieve the entity corresponding to the supplied key string.",
            "line": " lib/draft-js/DraftEntity.js:63"
        },
        {
            "message": "Missing item type\nEntity instances are immutable. If you need to update the data for an\ninstance, this method will merge your data updates and return a new\ninstance.",
            "line": " lib/draft-js/DraftEntity.js:72"
        },
        {
            "message": "Missing item type\nCompletely replace the data for a given instance.",
            "line": " lib/draft-js/DraftEntity.js:85"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEntityInstance.js:1"
        },
        {
            "message": "Missing item type\nAn instance of a document entity, consisting of a `type` and relevant\n`data`, metadata about the entity.\n\nFor instance, a \"link\" entity might provide a URI, and a \"mention\"\nentity might provide the mentioned user's ID. These pieces of data\nmay be used when rendering the entity as part of a ContentBlock DOM\nrepresentation. For a link, the data would be used as an href for\nthe rendered anchor. For a mention, the ID could be used to retrieve\na hovercard.",
            "line": " lib/draft-js/DraftEntityInstance.js:33"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEntityMutability.js:1"
        },
        {
            "message": "Missing item type\nAn enum representing the possible \"mutability\" options for an entity.\nThis refers to the behavior that should occur when inserting or removing\ncharacters in a text range with an entity applied to it.\n\n`MUTABLE`:\n  The text range can be modified freely. Generally used in cases where\n  the text content and the entity do not necessarily have a direct\n  relationship. For instance, the text and URI for a link may be completely\n  different. The user is allowed to edit the text as needed, and the entity\n  is preserved and applied to any characters added within the range.\n\n`IMMUTABLE`:\n  Not to be confused with immutable data structures used to represent the\n  state of the editor. Immutable entity ranges cannot be modified in any\n  way. Adding characters within the range will remove the entity from the\n  entire range. Deleting characters will delete the entire range. Example:\n  Facebook Page mentions.\n\n`SEGMENTED`:\n  Segmented entities allow the removal of partial ranges of text, as\n  separated by a delimiter. Adding characters wihin the range will remove\n  the entity from the entire range. Deleting characters within a segmented\n  entity will delete only the segments affected by the deletion. Example:\n  Facebook User mentions.",
            "line": " lib/draft-js/DraftEntityMutability.js:20"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEntitySegments.js:1"
        },
        {
            "message": "Missing item type\nIdentify the range to delete from a segmented entity.\n\nRules:\n\n Example: 'John F. Kennedy'\n\n  - Deletion from within any non-whitespace (i.e. ['John', 'F.', 'Kennedy'])\n    will return the range of that text.\n\n      'John F. Kennedy' -> 'John F.'\n                 ^\n\n  - Forward deletion of whitespace will remove the following section:\n\n      'John F. Kennedy' -> 'John Kennedy'\n           ^\n\n  - Backward deletion of whitespace will remove the previous section:\n\n      'John F. Kennedy' -> 'F. Kennedy'\n           ^",
            "line": " lib/draft-js/DraftEntitySegments.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftEntityType.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftInlineStyle.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftModifier.js:1"
        },
        {
            "message": "Missing item type\n`DraftModifier` provides a set of convenience methods that apply\nmodifications to a `ContentState` object based on a target `SelectionState`.\n\nAny change to a `ContentState` should be decomposable into a series of\ntransaction functions that apply the required changes and return output\n`ContentState` objects.\n\nThese functions encapsulate some of the most common transaction sequences.",
            "line": " lib/draft-js/DraftModifier.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftOffsetKey.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftOffsetKeyPath.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftPasteProcessor.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftRange.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftRemovableWord.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftRemovalDirection.js:1"
        },
        {
            "message": "Missing item type\nA type that allows us to avoid passing boolean arguments\naround to indicate whether a deletion is forward or backward.",
            "line": " lib/draft-js/DraftRemovalDirection.js:17"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftScrollPosition.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftStringKey.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/DraftTextAlignment.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/EditorBidiService.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/EditorChangeType.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/EditorState.js:1"
        },
        {
            "message": "Missing item type\nWhile editing, the user may apply inline style commands with a collapsed\ncursor, intending to type text that adopts the specified style. In this\ncase, we track the specified style as an \"override\" that takes precedence\nover the inline style of the text adjacent to the cursor.\n\nIf null, there is no override in place.",
            "line": " lib/draft-js/EditorState.js:106"
        },
        {
            "message": "Missing item type\nGet the appropriate inline style for the editor state. If an\noverride is in place, use it. Otherwise, the current style is\nbased on the location of the selection state.",
            "line": " lib/draft-js/EditorState.js:122"
        },
        {
            "message": "Missing item type\nIncorporate native DOM selection changes into the EditorState. This\nmethod can be used when we simply want to accept whatever the DOM\nhas given us to represent selection, and we do not need to re-render\nthe editor.\n\nTo forcibly move the DOM selection, see `EditorState.forceSelection`.",
            "line": " lib/draft-js/EditorState.js:168"
        },
        {
            "message": "Missing item type\nAt times, we need to force the DOM selection to be where we\nneed it to be. This can occur when the anchor or focus nodes\nare non-text nodes, for instance. In this case, we want to trigger\na re-render of the editor, which in turn forces selection into\nthe correct place in the DOM. The `forceSelection` method\naccomplishes this.\n\nThis method should be used in cases where you need to explicitly\nmove the DOM selection from one place to another without a change\nin ContentState.",
            "line": " lib/draft-js/EditorState.js:257"
        },
        {
            "message": "Missing item type\nMove selection to the end of the editor without forcing focus.",
            "line": " lib/draft-js/EditorState.js:278"
        },
        {
            "message": "Missing item type\nForce focus to the end of the editor. This is useful in scenarios\nwhere we want to programmatically focus the input and it makes sense\nto allow the user to continue working seamlessly.",
            "line": " lib/draft-js/EditorState.js:298"
        },
        {
            "message": "Missing item type\nPush the current ContentState onto the undo stack if it should be\nconsidered a boundary state, and set the provided ContentState as the\nnew current content.",
            "line": " lib/draft-js/EditorState.js:310"
        },
        {
            "message": "Missing item type\nMake the top ContentState in the undo stack the new current content and\npush the current content onto the redo stack.",
            "line": " lib/draft-js/EditorState.js:370"
        },
        {
            "message": "Missing item type\nMake the top ContentState in the redo stack the new current content and\npush the current content onto the undo stack.",
            "line": " lib/draft-js/EditorState.js:403"
        },
        {
            "message": "Missing item type\nNot for public consumption.",
            "line": " lib/draft-js/EditorState.js:436"
        },
        {
            "message": "Missing item type\nSet the supplied SelectionState as the new current selection, and set\nthe `force` flag to trigger manual selection placement by the view.",
            "line": " lib/draft-js/EditorState.js:447"
        },
        {
            "message": "Missing item type\nNot for public consumption.",
            "line": " lib/draft-js/EditorState.js:452"
        },
        {
            "message": "Missing item type\nRegenerate the entire tree map for a given ContentState and decorator.\nReturns an OrderedMap that maps all available ContentBlock objects.",
            "line": " lib/draft-js/EditorState.js:475"
        },
        {
            "message": "Missing item type\nRegenerate tree map objects for all ContentBlocks that have changed\nbetween the current editorState and newContent. Returns an OrderedMap\nwith only changed regenerated tree map objects.",
            "line": " lib/draft-js/EditorState.js:485"
        },
        {
            "message": "Missing item type\nGenerate tree map objects for a new decorator object, preserving any\ndecorations that are unchanged from the previous decorator.\n\nNote that in order for this to perform optimally, decoration Lists for\ndecorators should be preserved when possible to allow for direct immutable\nList comparison.",
            "line": " lib/draft-js/EditorState.js:500"
        },
        {
            "message": "Missing item type\nReturn whether a change should be considered a boundary state, given\nthe previous change type. Allows us to discard potential boundary states\nduring standard typing or deletion behavior.",
            "line": " lib/draft-js/EditorState.js:516"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/EditorStateCreationConfig.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/EntityRange.js:1"
        },
        {
            "message": "Missing item type\nA plain object representation of an entity attribution.\n\nThe `key` value corresponds to the key of the entity in the `entityMap` of\na `ComposedText` object, not for use with `DraftEntity.get()`.",
            "line": " lib/draft-js/EntityRange.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/InlineStyleRange.js:1"
        },
        {
            "message": "Missing item type\nA plain object representation of an inline style range.",
            "line": " lib/draft-js/InlineStyleRange.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/KeyBindingUtil.js:1"
        },
        {
            "message": "Missing item type\nCheck whether the ctrlKey modifier is *not* being used in conjunction with\nthe altKey modifier. If they are combined, the result is an `altGraph`\nkey modifier, which should not be handled by this set of key bindings.",
            "line": " lib/draft-js/KeyBindingUtil.js:23"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/RawDraftContentBlock.js:1"
        },
        {
            "message": "Missing item type\nA plain object representation of a ContentBlock, with all style and entity\nattribution repackaged as range objects.",
            "line": " lib/draft-js/RawDraftContentBlock.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/RawDraftContentState.js:1"
        },
        {
            "message": "Missing item type\nA type that represents a composed document as vanilla JavaScript objects,\nwith all styles and entities represented as ranges. Corresponding entity\nobjects are packaged as objects as well.\n\nThis object is especially useful when sending the document state to the\nserver for storage, as its representation is more concise than our\nimmutable objects.",
            "line": " lib/draft-js/RawDraftContentState.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/RawDraftEntity.js:1"
        },
        {
            "message": "Missing item type\nA plain object representation of an EntityInstance.",
            "line": " lib/draft-js/RawDraftEntity.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/RichTextEditorUtil.js:1"
        },
        {
            "message": "Missing item type\nFor collapsed selections at the start of styled blocks, backspace should\njust remove the existing style.",
            "line": " lib/draft-js/RichTextEditorUtil.js:73"
        },
        {
            "message": "Missing item type\nToggle the specified inline style for the selection. If the\nuser's selection is collapsed, apply or remove the style for the\ninternal state. If it is not collapsed, apply the change directly\nto the document state.",
            "line": " lib/draft-js/RichTextEditorUtil.js:238"
        },
        {
            "message": "Missing item type\nWhen a collapsed cursor is at the start of an empty styled block, allow\ncertain key commands (newline, backspace) to simply change the\nstyle of the block instead of the default behavior.",
            "line": " lib/draft-js/RichTextEditorUtil.js:277"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/SampleDraftInlineStyle.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/SecondaryClipboard.js:1"
        },
        {
            "message": "Missing item type\nSome systems offer a \"secondary\" clipboard to allow quick internal cut\nand paste behavior. For instance, Ctrl+K (cut) and Ctrl+Y (paste).",
            "line": " lib/draft-js/SecondaryClipboard.js:23"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/SelectionState.js:1"
        },
        {
            "message": "Missing item type\nReturn whether the specified range overlaps with an edge of the\nSelectionState.",
            "line": " lib/draft-js/SelectionState.js:84"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/adjustBlockDepthForContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/applyEntityToContentBlock.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/applyEntityToContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/convertFromDraftStateToRaw.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/convertFromHTMLToContentBlocks.js:1"
        },
        {
            "message": "Missing item type\nCheck to see if we have anything like <p> <blockquote> <h1>... to create\nblock tags from. If we do, we can use those and ignore <div> tags. If we\ndon't, we can treat <div> tags as meaningful (unstyled) blocks.",
            "line": " lib/draft-js/convertFromHTMLToContentBlocks.js:207"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/convertFromRawToDraftState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/createCharacterList.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/decodeEntityRanges.js:1"
        },
        {
            "message": "Missing item type\nConvert to native JavaScript string lengths to determine ranges.",
            "line": " lib/draft-js/decodeEntityRanges.js:20"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/decodeInlineStyleRanges.js:1"
        },
        {
            "message": "Missing item type\nConvert to native JavaScript string lengths to determine ranges.",
            "line": " lib/draft-js/decodeInlineStyleRanges.js:25"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnBeforeInput.js:1"
        },
        {
            "message": "Missing item type\nReplace the current selection with the specified text string, with the\ninline style and entity key applied to the newly inserted text.",
            "line": " lib/draft-js/editOnBeforeInput.js:41"
        },
        {
            "message": "Missing item type\nWhen `onBeforeInput` executes, the browser is attempting to insert a\ncharacter into the editor. Apply this character data to the document,\nallowing native insertion if possible.\n\nNative insertion is encouraged in order to limit re-rendering and to\npreserve spellcheck highlighting, which disappears or flashes if re-render\noccurs on the relevant text nodes.",
            "line": " lib/draft-js/editOnBeforeInput.js:50"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnBlur.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnCompositionStart.js:1"
        },
        {
            "message": "Missing item type\nThe user has begun using an IME input system. Switching to `composite` mode\nallows handling composition input and disables other edit behavior.",
            "line": " lib/draft-js/editOnCompositionStart.js:17"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnCopy.js:1"
        },
        {
            "message": "Missing item type\nIf we have a selection, create a ContentState fragment and store\nit in our internal clipboard. Subsequent paste events will use this\nfragment if no external clipboard data is supplied.",
            "line": " lib/draft-js/editOnCopy.js:17"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnCut.js:1"
        },
        {
            "message": "Missing item type\nOn `cut` events, native behavior is allowed to occur so that the system\nclipboard is set properly. This means that we need to take steps to recover\nthe editor DOM state after the `cut` has occurred in order to maintain\ncontrol of the component.\n\nIn addition, we can keep a copy of the removed fragment, including all\nstyles and entities, for use as an internal paste.",
            "line": " lib/draft-js/editOnCut.js:22"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnDragOver.js:1"
        },
        {
            "message": "Missing item type\nDrag behavior has begun from outside the editor element.",
            "line": " lib/draft-js/editOnDragOver.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnDragStart.js:1"
        },
        {
            "message": "Missing item type\nA `dragstart` event has begun within the text editor component.",
            "line": " lib/draft-js/editOnDragStart.js:15"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnFocus.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnInput.js:1"
        },
        {
            "message": "Missing item type\nThis function is intended to handle spellcheck and autocorrect changes,\nwhich occur in the DOM natively without any opportunity to observe or\ninterpret the changes before they occur.\n\nThe `input` event fires in contentEditable elements reliably for non-IE\nbrowsers, immediately after changes occur to the editor DOM. Since our other\nhandlers override or otherwise handle cover other varieties of text input,\nthe DOM state should match the model in all controlled input cases. Thus,\nwhen an `input` change leads to a DOM/model mismatch, the change should be\ndue to a spellcheck change, and we can incorporate it into our model.",
            "line": " lib/draft-js/editOnInput.js:30"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnKeyDown.js:1"
        },
        {
            "message": "Missing item type\nMap a `DraftEditorCommand` command value to a corresponding function.",
            "line": " lib/draft-js/editOnKeyDown.js:39"
        },
        {
            "message": "Missing item type\nIntercept keydown behavior to handle keys and commands manually, if desired.\n\nKeydown combinations may be mapped to `DraftCommand` values, which may\ncorrespond to command functions that modify the editor or its contents.\n\nSee `getDefaultKeyBinding` for defaults. Alternatively, the top-level\ncomponent may provide a custom mapping via the `keyBindingFn` prop.",
            "line": " lib/draft-js/editOnKeyDown.js:73"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnPaste.js:1"
        },
        {
            "message": "Missing item type\nPaste content.",
            "line": " lib/draft-js/editOnPaste.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/editOnSelect.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/encodeEntityRanges.js:1"
        },
        {
            "message": "Missing item type\nConvert to UTF-8 character counts for storage.",
            "line": " lib/draft-js/encodeEntityRanges.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/encodeInlineStyleRanges.js:1"
        },
        {
            "message": "Missing item type\nHelper function for getting encoded styles for each inline style. Convert\nto UTF-8 character counts for storage.",
            "line": " lib/draft-js/encodeInlineStyleRanges.js:27"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:1"
        },
        {
            "message": "Missing item type\nReturn the computed line height, in pixels, for the provided element.",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:21"
        },
        {
            "message": "Missing item type\nReturn whether every ClientRect in the provided list lies on the same line.\n\nWe assume that the rects on the same line all contain the baseline, so the\nlowest top line needs to be above the highest bottom line (i.e., if you were\nto project the rects onto the y-axis, their intersection would be nonempty).\n\nIn addition, we require that no two boxes are lineHeight (or more) apart at\neither top or bottom, which helps protect against false positives for fonts\nwith extremely large glyph heights (e.g., with a font size of 17px, Zapfino\nproduces rects of height 58px!).",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:43"
        },
        {
            "message": "Missing item type\nReturn the length of a node, as used by Range offsets.",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:82"
        },
        {
            "message": "Missing item type\nGiven a collapsed range, move the start position backwards as far as\npossible while the range still spans only a single line.",
            "line": " lib/draft-js/expandRangeToStartOfLine.js:99"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/findAncestorOffsetKey.js:1"
        },
        {
            "message": "Missing item type\nGet the key from the node's nearest offset-aware ancestor.",
            "line": " lib/draft-js/findAncestorOffsetKey.js:18"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/findRangesImmutable.js:1"
        },
        {
            "message": "Missing item type\nSearch through an array to find contiguous stretches of elements that\nmatch a specified filter function.\n\nWhen ranges are found, execute a specified `found` function to supply\nthe values to the caller.",
            "line": " lib/draft-js/findRangesImmutable.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/generateRandomKey.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getCharacterRemovalRange.js:1"
        },
        {
            "message": "Missing item type\nGiven a SelectionState and a removal direction, determine the entire range\nthat should be removed from a ContentState. This is based on any entities\nwithin the target, with their `mutability` values taken into account.\n\nFor instance, if we are attempting to remove part of an \"immutable\" entity\nrange, the entire entity must be removed. The returned `SelectionState`\nwill be adjusted accordingly.",
            "line": " lib/draft-js/getCharacterRemovalRange.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getContentStateFragment.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getDefaultKeyBinding.js:1"
        },
        {
            "message": "Missing item type\nGet the appropriate undo/redo command for a Z key command.",
            "line": " lib/draft-js/getDefaultKeyBinding.js:37"
        },
        {
            "message": "Missing item type\nRetrieve a bound key command for the given event.",
            "line": " lib/draft-js/getDefaultKeyBinding.js:61"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getDraftEditorSelection.js:1"
        },
        {
            "message": "Missing item type\nConvert the current selection range to an anchor/focus pair of offset keys\nand values that can be interpreted by components.",
            "line": " lib/draft-js/getDraftEditorSelection.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:1"
        },
        {
            "message": "Missing item type\nConvert the current selection range to an anchor/focus pair of offset keys\nand values that can be interpreted by components.",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:22"
        },
        {
            "message": "Missing item type\nIdentify the first leaf descendant for the given node.",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:93"
        },
        {
            "message": "Missing item type\nIdentify the last leaf descendant for the given node.",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:103"
        },
        {
            "message": "Missing item type\nReturn the length of a node's textContent, regarding single newline\ncharacters as zero-length. This allows us to avoid problems with identifying\nthe correct selection offset for empty blocks in IE, in which we\nrender newlines instead of break tags.",
            "line": " lib/draft-js/getDraftEditorSelectionWithNodes.js:167"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getEntityKeyForSelection.js:1"
        },
        {
            "message": "Missing item type\nReturn the entity key that should be used when inserting text for the\nspecified target selection, only if the entity is `MUTABLE`. `IMMUTABLE`\nand `SEGMENTED` entities should not be used for insertion behavior.",
            "line": " lib/draft-js/getEntityKeyForSelection.js:14"
        },
        {
            "message": "Missing item type\nDetermine whether an entity key corresponds to a `MUTABLE` entity. If so,\nreturn it. If not, return null.",
            "line": " lib/draft-js/getEntityKeyForSelection.js:45"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getFragmentFromSelection.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getRangeBoundingClientRect.js:1"
        },
        {
            "message": "Missing item type\nLike range.getBoundingClientRect() but normalizes for browser bugs.",
            "line": " lib/draft-js/getRangeBoundingClientRect.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getRangeClientRects.js:1"
        },
        {
            "message": "Missing item type\nLike range.getClientRects() but normalizes for browser bugs.",
            "line": " lib/draft-js/getRangeClientRects.js:56"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getRangesForDraftEntity.js:1"
        },
        {
            "message": "Missing item type\nObtain the start and end positions of the range that has the\nspecified entity applied to it.\n\nEntity keys are applied only to contiguous stretches of text, so this\nmethod searches for the first instance of the entity key and returns\nthe subsequent range.",
            "line": " lib/draft-js/getRangesForDraftEntity.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getSafeBodyFromHTML.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getSampleStateForTesting.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getSelectionOffsetKeyForNode.js:1"
        },
        {
            "message": "Missing item type\nGet offset key from a node.",
            "line": " lib/draft-js/getSelectionOffsetKeyForNode.js:16"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getTextAfterNearestEntity.js:1"
        },
        {
            "message": "Missing item type\nFind the string of text between the previous entity and the specified\noffset. This allows us to narrow down search areas for regex matching.",
            "line": " lib/draft-js/getTextAfterNearestEntity.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getTextContentFromFiles.js:1"
        },
        {
            "message": "Missing item type\nExtract the text content from a file list.",
            "line": " lib/draft-js/getTextContentFromFiles.js:26"
        },
        {
            "message": "Missing item type\ntodo isaac: Do work to turn html/rtf into a content fragment.",
            "line": " lib/draft-js/getTextContentFromFiles.js:43"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getUpdatedSelectionState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/getVisibleSelectionRect.js:1"
        },
        {
            "message": "Missing item type\nReturn the bounding ClientRect for the visible DOM selection, if any.\nIn cases where there are no selected ranges or the bounding rect is\ntemporarily invalid, return null.",
            "line": " lib/draft-js/getVisibleSelectionRect.js:14"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/insertFragmentIntoContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/insertIntoList.js:1"
        },
        {
            "message": "Missing item type\nMaintain persistence for target list when appending and prepending.",
            "line": " lib/draft-js/insertIntoList.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/insertTextIntoContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/isSelectionAtLeafStart.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/isSoftNewlineEvent.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandBackspaceToStartOfLine.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandBackspaceWord.js:1"
        },
        {
            "message": "Missing item type\nDelete the word that is left of the cursor, as well as any spaces or\npunctuation after the word.",
            "line": " lib/draft-js/keyCommandBackspaceWord.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandDeleteWord.js:1"
        },
        {
            "message": "Missing item type\nDelete the word that is right of the cursor, as well as any spaces or\npunctuation before the word.",
            "line": " lib/draft-js/keyCommandDeleteWord.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandInsertNewline.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js:1"
        },
        {
            "message": "Missing item type\nSee comment for `moveSelectionToStartOfBlock`.",
            "line": " lib/draft-js/keyCommandMoveSelectionToEndOfBlock.js:17"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js:1"
        },
        {
            "message": "Missing item type\nCollapse selection at the start of the first selected block. This is used\nfor Firefox versions that attempt to navigate forward/backward instead of\nmoving the cursor. Other browsers are able to move the cursor natively.",
            "line": " lib/draft-js/keyCommandMoveSelectionToStartOfBlock.js:17"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandPlainBackspace.js:1"
        },
        {
            "message": "Missing item type\nRemove the selected range. If the cursor is collapsed, remove the preceding\ncharacter. This operation is Unicode-aware, so removing a single character\nwill remove a surrogate pair properly as well.",
            "line": " lib/draft-js/keyCommandPlainBackspace.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandPlainDelete.js:1"
        },
        {
            "message": "Missing item type\nRemove the selected range. If the cursor is collapsed, remove the following\ncharacter. This operation is Unicode-aware, so removing a single character\nwill remove a surrogate pair properly as well.",
            "line": " lib/draft-js/keyCommandPlainDelete.js:21"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandTransposeCharacters.js:1"
        },
        {
            "message": "Missing item type\nTranspose the characters on either side of a collapsed cursor, or\nif the cursor is at the end of the block, transpose the last two\ncharacters.",
            "line": " lib/draft-js/keyCommandTransposeCharacters.js:20"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/keyCommandUndo.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/moveSelectionBackward.js:1"
        },
        {
            "message": "Missing item type\nGiven a collapsed selection, move the focus `maxDistance` backward within\nthe selected block. If the selection will go beyond the start of the block,\nmove focus to the end of the previous block, but no further.\n\nThis function is not Unicode-aware, so surrogate pairs will be treated\nas having length 2.",
            "line": " lib/draft-js/moveSelectionBackward.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/moveSelectionForward.js:1"
        },
        {
            "message": "Missing item type\nGiven a collapsed selection, move the focus `maxDistance` forward within\nthe selected block. If the selection will go beyond the end of the block,\nmove focus to the start of the next block, but no further.\n\nThis function is not Unicode-aware, so surrogate pairs will be treated\nas having length 2.",
            "line": " lib/draft-js/moveSelectionForward.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/removeEntitiesAtEdges.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/removeRangeFromContentState.js:1"
        },
        {
            "message": "Missing item type\nMaintain persistence for target list when removing characters on the\nhead and tail of the character list.",
            "line": " lib/draft-js/removeRangeFromContentState.js:68"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/removeTextWithStrategy.js:1"
        },
        {
            "message": "Missing item type\nFor a collapsed selection state, remove text based on the specified strategy.\nIf the selection state is not collapsed, remove the entire selected range.",
            "line": " lib/draft-js/removeTextWithStrategy.js:13"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/sanitizeDraftText.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/setBlockTypeForContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/setDraftEditorSelection.js:1"
        },
        {
            "message": "Missing item type\nIn modern non-IE browsers, we can support both forward and backward\nselections.\n\nNote: IE10+ supports the Selection object, but it does not support\nthe `extend` method, which means that even in modern IE, it's not possible\nto programatically create a backward selection. Thus, for all IE\nversions, we use the old IE API to create our selections.",
            "line": " lib/draft-js/setDraftEditorSelection.js:14"
        },
        {
            "message": "Missing item type\nExtend selection towards focus point.",
            "line": " lib/draft-js/setDraftEditorSelection.js:104"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/splitBlockInContentState.js:1"
        },
        {
            "message": "Missing item type\nCopyright (c) 2013-present, Facebook, Inc.\nAll rights reserved.\n\nThis source code is licensed under the BSD-style license found in the\nLICENSE file in the root directory of this source tree. An additional grant\nof patent rights can be found in the PATENTS file in the same directory.",
            "line": " lib/draft-js/splitTextIntoTextBlocks.js:1"
        },
        {
            "message": "Missing item type\nCalls a provided `modifier` function with a selection for each\nselected block in the current editor selection. Passes through additional\narguments to the modifier.\n\nNote: At the moment it will retain the original selection and override\npossible selection changes from modifiers",
            "line": " lib/draft-js-utils/callModifierForSelectedBlocks.js:15"
        },
        {
            "message": "Missing item type\nReturns an array of all `ContentBlock` instances within two block keys",
            "line": " lib/draft-js-utils/getSelectedBlocks.js:6"
        }
    ]
}